                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler
                                      3 ; Version 4.5.1 #15267 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module sprite_component
                                      6 	
                                      7 ;--------------------------------------------------------
                                      8 ; Public variables in this module
                                      9 ;--------------------------------------------------------
                                     10 	.globl _spriteComponent
                                     11 ;--------------------------------------------------------
                                     12 ; special function registers
                                     13 ;--------------------------------------------------------
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area _DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _INITIALIZED
    00000000                         22 _spriteComponent::
    00000000                         23 	.ds 450
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                                     44 ;Source/Engine/Components/../Libraries/vec2.h:32: static inline void vec2_set(vec2 *v, int x, int y) {
                                     45 ;	---------------------------------
                                     46 ; Function vec2_set
                                     47 ; ---------------------------------
    00000000                         48 _vec2_set:
    00000000 69               [ 4]   49 	ld	l, c
    00000001 60               [ 4]   50 	ld	h, b
                                     51 ;Source/Engine/Components/../Libraries/vec2.h:33: v->x = F12(x);
    00000002 4B               [ 4]   52 	ld	c, e
    00000003 42               [ 4]   53 	ld	b, d
    00000004 29               [ 8]   54 	add	hl, hl
    00000005 29               [ 8]   55 	add	hl, hl
    00000006 29               [ 8]   56 	add	hl, hl
    00000007 29               [ 8]   57 	add	hl, hl
    00000008 7D               [ 4]   58 	ld	a, l
    00000009 02               [ 8]   59 	ld	(bc), a
    0000000A 03               [ 8]   60 	inc	bc
    0000000B 7C               [ 4]   61 	ld	a, h
    0000000C 02               [ 8]   62 	ld	(bc), a
                                     63 ;Source/Engine/Components/../Libraries/vec2.h:34: v->y = F12(y);
    0000000D 13               [ 8]   64 	inc	de
    0000000E 13               [ 8]   65 	inc	de
    0000000F F8 02            [12]   66 	ldhl	sp,	#2
    00000011 2A               [ 8]   67 	ld	a, (hl+)
    00000012 46               [ 8]   68 	ld	b, (hl)
    00000013 87               [ 4]   69 	add	a, a
    00000014 CB 10            [ 8]   70 	rl	b
    00000016 87               [ 4]   71 	add	a, a
    00000017 CB 10            [ 8]   72 	rl	b
    00000019 87               [ 4]   73 	add	a, a
    0000001A CB 10            [ 8]   74 	rl	b
    0000001C 87               [ 4]   75 	add	a, a
    0000001D CB 10            [ 8]   76 	rl	b
    0000001F 4F               [ 4]   77 	ld	c, a
    00000020 12               [ 8]   78 	ld	(de), a
    00000021 13               [ 8]   79 	inc	de
    00000022 78               [ 4]   80 	ld	a, b
    00000023 12               [ 8]   81 	ld	(de), a
                                     82 ;Source/Engine/Components/../Libraries/vec2.h:35: }
    00000024 E1               [12]   83 	pop	hl
    00000025 F1               [12]   84 	pop	af
    00000026 E9               [ 4]   85 	jp	(hl)
                                     86 ;Source/Engine/Components/../Libraries/vec2.h:38: static inline void vec2_add(vec2 *a, const vec2 *b) {
                                     87 ;	---------------------------------
                                     88 ; Function vec2_add
                                     89 ; ---------------------------------
    00000027                         90 _vec2_add:
    00000027 E8 F8            [16]   91 	add	sp, #-8
    00000029 F8 06            [12]   92 	ldhl	sp,	#6
    0000002B 7B               [ 4]   93 	ld	a, e
    0000002C 22               [ 8]   94 	ld	(hl+), a
    0000002D 72               [ 8]   95 	ld	(hl), d
    0000002E F8 04            [12]   96 	ldhl	sp,	#4
    00000030 79               [ 4]   97 	ld	a, c
    00000031 22               [ 8]   98 	ld	(hl+), a
                                     99 ;Source/Engine/Components/../Libraries/vec2.h:39: a->x += b->x;
    00000032 78               [ 4]  100 	ld	a, b
    00000033 22               [ 8]  101 	ld	(hl+), a
    00000034 7E               [ 8]  102 	ld	a, (hl)
    00000035 F8 02            [12]  103 	ldhl	sp,	#2
    00000037 77               [ 8]  104 	ld	(hl), a
    00000038 F8 07            [12]  105 	ldhl	sp,	#7
    0000003A 7E               [ 8]  106 	ld	a, (hl)
    0000003B F8 03            [12]  107 	ldhl	sp,	#3
    0000003D 32               [ 8]  108 	ld	(hl-), a
    0000003E 2A               [ 8]  109 	ld	a, (hl+)
    0000003F 5F               [ 4]  110 	ld	e, a
    00000040 2A               [ 8]  111 	ld	a, (hl+)
    00000041 57               [ 4]  112 	ld	d, a
    00000042 1A               [ 8]  113 	ld	a, (de)
    00000043 4F               [ 4]  114 	ld	c, a
    00000044 13               [ 8]  115 	inc	de
    00000045 1A               [ 8]  116 	ld	a, (de)
    00000046 47               [ 4]  117 	ld	b, a
    00000047 2A               [ 8]  118 	ld	a, (hl+)
    00000048 5F               [ 4]  119 	ld	e, a
    00000049 56               [ 8]  120 	ld	d, (hl)
    0000004A 1A               [ 8]  121 	ld	a, (de)
    0000004B 6F               [ 4]  122 	ld	l, a
    0000004C 13               [ 8]  123 	inc	de
    0000004D 1A               [ 8]  124 	ld	a, (de)
    0000004E 67               [ 4]  125 	ld	h, a
    0000004F 09               [ 8]  126 	add	hl, bc
    00000050 4D               [ 4]  127 	ld	c, l
    00000051 44               [ 4]  128 	ld	b, h
    00000052 F8 02            [12]  129 	ldhl	sp,	#2
    00000054 2A               [ 8]  130 	ld	a, (hl+)
    00000055 66               [ 8]  131 	ld	h, (hl)
    00000056 6F               [ 4]  132 	ld	l, a
    00000057 79               [ 4]  133 	ld	a, c
    00000058 22               [ 8]  134 	ld	(hl+), a
    00000059 70               [ 8]  135 	ld	(hl), b
                                    136 ;Source/Engine/Components/../Libraries/vec2.h:40: a->y += b->y;
    0000005A F8 06            [12]  137 	ldhl	sp,	#6
    0000005C 2A               [ 8]  138 	ld	a, (hl+)
    0000005D 4F               [ 4]  139 	ld	c, a
    0000005E 46               [ 8]  140 	ld	b, (hl)
    0000005F 03               [ 8]  141 	inc	bc
    00000060 03               [ 8]  142 	inc	bc
    00000061 59               [ 4]  143 	ld	e, c
    00000062 50               [ 4]  144 	ld	d, b
    00000063 1A               [ 8]  145 	ld	a, (de)
    00000064 F8 00            [12]  146 	ldhl	sp,	#0
    00000066 22               [ 8]  147 	ld	(hl+), a
    00000067 13               [ 8]  148 	inc	de
    00000068 1A               [ 8]  149 	ld	a, (de)
    00000069 77               [ 8]  150 	ld	(hl), a
    0000006A F8 04            [12]  151 	ldhl	sp,	#4
    0000006C 2A               [ 8]  152 	ld	a, (hl+)
    0000006D 66               [ 8]  153 	ld	h, (hl)
    0000006E 6F               [ 4]  154 	ld	l, a
    0000006F 23               [ 8]  155 	inc	hl
    00000070 23               [ 8]  156 	inc	hl
    00000071 5D               [ 4]  157 	ld	e, l
    00000072 54               [ 4]  158 	ld	d, h
    00000073 1A               [ 8]  159 	ld	a, (de)
    00000074 F8 02            [12]  160 	ldhl	sp,	#2
    00000076 22               [ 8]  161 	ld	(hl+), a
    00000077 13               [ 8]  162 	inc	de
    00000078 1A               [ 8]  163 	ld	a, (de)
    00000079 77               [ 8]  164 	ld	(hl), a
    0000007A F8 02            [12]  165 	ldhl	sp,#2
    0000007C 2A               [ 8]  166 	ld	a, (hl+)
    0000007D 5F               [ 4]  167 	ld	e, a
    0000007E 56               [ 8]  168 	ld	d, (hl)
    0000007F E1               [12]  169 	pop	hl
    00000080 E5               [16]  170 	push	hl
    00000081 19               [ 8]  171 	add	hl, de
    00000082 5D               [ 4]  172 	ld	e, l
    00000083 54               [ 4]  173 	ld	d, h
    00000084 7B               [ 4]  174 	ld	a, e
    00000085 02               [ 8]  175 	ld	(bc), a
    00000086 03               [ 8]  176 	inc	bc
    00000087 7A               [ 4]  177 	ld	a, d
    00000088 02               [ 8]  178 	ld	(bc), a
                                    179 ;Source/Engine/Components/../Libraries/vec2.h:41: }
    00000089 E8 08            [16]  180 	add	sp, #8
    0000008B C9               [16]  181 	ret
                                    182 ;Source/Engine/Components/../Libraries/vec2.h:44: static inline void vec2_sub(vec2 *a, const vec2 *b) {
                                    183 ;	---------------------------------
                                    184 ; Function vec2_sub
                                    185 ; ---------------------------------
    0000008C                        186 _vec2_sub:
    0000008C E8 FA            [16]  187 	add	sp, #-6
    0000008E F8 04            [12]  188 	ldhl	sp,	#4
    00000090 7B               [ 4]  189 	ld	a, e
    00000091 22               [ 8]  190 	ld	(hl+), a
    00000092 72               [ 8]  191 	ld	(hl), d
    00000093 F8 02            [12]  192 	ldhl	sp,	#2
    00000095 79               [ 4]  193 	ld	a, c
    00000096 22               [ 8]  194 	ld	(hl+), a
                                    195 ;Source/Engine/Components/../Libraries/vec2.h:45: a->x -= b->x;
    00000097 78               [ 4]  196 	ld	a, b
    00000098 22               [ 8]  197 	ld	(hl+), a
    00000099 7E               [ 8]  198 	ld	a, (hl)
    0000009A F8 00            [12]  199 	ldhl	sp,	#0
    0000009C 77               [ 8]  200 	ld	(hl), a
    0000009D F8 05            [12]  201 	ldhl	sp,	#5
    0000009F 7E               [ 8]  202 	ld	a, (hl)
    000000A0 F8 01            [12]  203 	ldhl	sp,	#1
    000000A2 22               [ 8]  204 	ld	(hl+), a
    000000A3 D1               [12]  205 	pop	de
    000000A4 D5               [16]  206 	push	de
    000000A5 1A               [ 8]  207 	ld	a, (de)
    000000A6 4F               [ 4]  208 	ld	c, a
    000000A7 13               [ 8]  209 	inc	de
    000000A8 1A               [ 8]  210 	ld	a, (de)
    000000A9 47               [ 4]  211 	ld	b, a
    000000AA 2A               [ 8]  212 	ld	a, (hl+)
    000000AB 5F               [ 4]  213 	ld	e, a
    000000AC 56               [ 8]  214 	ld	d, (hl)
    000000AD 1A               [ 8]  215 	ld	a, (de)
    000000AE 6F               [ 4]  216 	ld	l, a
    000000AF 13               [ 8]  217 	inc	de
    000000B0 1A               [ 8]  218 	ld	a, (de)
    000000B1 67               [ 4]  219 	ld	h, a
    000000B2 79               [ 4]  220 	ld	a, c
    000000B3 95               [ 4]  221 	sub	a, l
    000000B4 4F               [ 4]  222 	ld	c, a
    000000B5 78               [ 4]  223 	ld	a, b
    000000B6 9C               [ 4]  224 	sbc	a, h
    000000B7 47               [ 4]  225 	ld	b, a
    000000B8 E1               [12]  226 	pop	hl
    000000B9 E5               [16]  227 	push	hl
    000000BA 79               [ 4]  228 	ld	a, c
    000000BB 22               [ 8]  229 	ld	(hl+), a
    000000BC 70               [ 8]  230 	ld	(hl), b
                                    231 ;Source/Engine/Components/../Libraries/vec2.h:46: a->y -= b->y;
    000000BD F8 04            [12]  232 	ldhl	sp,#4
    000000BF 2A               [ 8]  233 	ld	a, (hl+)
    000000C0 5F               [ 4]  234 	ld	e, a
    000000C1 56               [ 8]  235 	ld	d, (hl)
    000000C2 21 02 00         [12]  236 	ld	hl, #0x0002
    000000C5 19               [ 8]  237 	add	hl, de
    000000C6 33               [ 8]  238 	inc	sp
    000000C7 33               [ 8]  239 	inc	sp
    000000C8 5D               [ 4]  240 	ld	e, l
    000000C9 54               [ 4]  241 	ld	d, h
    000000CA D5               [16]  242 	push	de
    000000CB 1A               [ 8]  243 	ld	a, (de)
    000000CC 4F               [ 4]  244 	ld	c, a
    000000CD 13               [ 8]  245 	inc	de
    000000CE 1A               [ 8]  246 	ld	a, (de)
    000000CF 47               [ 4]  247 	ld	b, a
    000000D0 F8 02            [12]  248 	ldhl	sp,	#2
    000000D2 2A               [ 8]  249 	ld	a, (hl+)
    000000D3 66               [ 8]  250 	ld	h, (hl)
    000000D4 6F               [ 4]  251 	ld	l, a
    000000D5 23               [ 8]  252 	inc	hl
    000000D6 23               [ 8]  253 	inc	hl
    000000D7 2A               [ 8]  254 	ld	a,	(hl+)
    000000D8 66               [ 8]  255 	ld	h, (hl)
    000000D9 6F               [ 4]  256 	ld	l, a
    000000DA 79               [ 4]  257 	ld	a, c
    000000DB 95               [ 4]  258 	sub	a, l
    000000DC 4F               [ 4]  259 	ld	c, a
    000000DD 78               [ 4]  260 	ld	a, b
    000000DE 9C               [ 4]  261 	sbc	a, h
    000000DF 47               [ 4]  262 	ld	b, a
    000000E0 E1               [12]  263 	pop	hl
    000000E1 E5               [16]  264 	push	hl
    000000E2 79               [ 4]  265 	ld	a, c
    000000E3 22               [ 8]  266 	ld	(hl+), a
    000000E4 70               [ 8]  267 	ld	(hl), b
                                    268 ;Source/Engine/Components/../Libraries/vec2.h:47: }
    000000E5 E8 06            [16]  269 	add	sp, #6
    000000E7 C9               [16]  270 	ret
                                    271 ;Source/Engine/Components/../Libraries/vec2.h:50: static inline void vec2_scale(vec2 *a, f12 s) {
                                    272 ;	---------------------------------
                                    273 ; Function vec2_scale
                                    274 ; ---------------------------------
    000000E8                        275 _vec2_scale:
    000000E8 E8 F2            [16]  276 	add	sp, #-14
    000000EA F8 0C            [12]  277 	ldhl	sp,	#12
    000000EC 7B               [ 4]  278 	ld	a, e
    000000ED 22               [ 8]  279 	ld	(hl+), a
    000000EE 72               [ 8]  280 	ld	(hl), d
    000000EF F8 0A            [12]  281 	ldhl	sp,	#10
    000000F1 79               [ 4]  282 	ld	a, c
    000000F2 22               [ 8]  283 	ld	(hl+), a
                                    284 ;Source/Engine/Components/../Libraries/vec2.h:52: a->x = ((int32_t)a->x * s) >> 4;
    000000F3 78               [ 4]  285 	ld	a, b
    000000F4 22               [ 8]  286 	ld	(hl+), a
    000000F5 7E               [ 8]  287 	ld	a, (hl)
    000000F6 F8 00            [12]  288 	ldhl	sp,	#0
    000000F8 77               [ 8]  289 	ld	(hl), a
    000000F9 F8 0D            [12]  290 	ldhl	sp,	#13
    000000FB 7E               [ 8]  291 	ld	a, (hl)
    000000FC F8 01            [12]  292 	ldhl	sp,	#1
    000000FE 22               [ 8]  293 	ld	(hl+), a
    000000FF D1               [12]  294 	pop	de
    00000100 D5               [16]  295 	push	de
    00000101 1A               [ 8]  296 	ld	a, (de)
    00000102 4F               [ 4]  297 	ld	c, a
    00000103 13               [ 8]  298 	inc	de
    00000104 1A               [ 8]  299 	ld	a, (de)
    00000105 71               [ 8]  300 	ld	(hl), c
    00000106 23               [ 8]  301 	inc	hl
    00000107 22               [ 8]  302 	ld	(hl+), a
    00000108 07               [ 4]  303 	rlca
    00000109 9F               [ 4]  304 	sbc	a, a
    0000010A 22               [ 8]  305 	ld	(hl+), a
    0000010B 77               [ 8]  306 	ld	(hl), a
    0000010C F8 0A            [12]  307 	ldhl	sp,	#10
    0000010E 7E               [ 8]  308 	ld	a, (hl)
    0000010F F8 06            [12]  309 	ldhl	sp,	#6
    00000111 77               [ 8]  310 	ld	(hl), a
    00000112 F8 0B            [12]  311 	ldhl	sp,	#11
    00000114 7E               [ 8]  312 	ld	a, (hl)
    00000115 F8 07            [12]  313 	ldhl	sp,	#7
    00000117 22               [ 8]  314 	ld	(hl+), a
    00000118 07               [ 4]  315 	rlca
    00000119 9F               [ 4]  316 	sbc	a, a
    0000011A 22               [ 8]  317 	ld	(hl+), a
    0000011B 32               [ 8]  318 	ld	(hl-), a
    0000011C 2A               [ 8]  319 	ld	a, (hl+)
    0000011D 5F               [ 4]  320 	ld	e, a
    0000011E 56               [ 8]  321 	ld	d, (hl)
    0000011F D5               [16]  322 	push	de
    00000120 F8 08            [12]  323 	ldhl	sp,	#8
    00000122 2A               [ 8]  324 	ld	a, (hl+)
    00000123 5F               [ 4]  325 	ld	e, a
    00000124 56               [ 8]  326 	ld	d, (hl)
    00000125 D5               [16]  327 	push	de
    00000126 F8 06            [12]  328 	ldhl	sp,	#6
    00000128 2A               [ 8]  329 	ld	a, (hl+)
    00000129 4F               [ 4]  330 	ld	c, a
    0000012A 2A               [ 8]  331 	ld	a, (hl+)
    0000012B 47               [ 4]  332 	ld	b, a
    0000012C 2A               [ 8]  333 	ld	a, (hl+)
    0000012D 5F               [ 4]  334 	ld	e, a
    0000012E 56               [ 8]  335 	ld	d, (hl)
    0000012F CDr00r00         [24]  336 	call	__mullong
    00000132 3E 04            [ 8]  337 	ld	a, #0x04
    00000134                        338 00103$:
    00000134 CB 2A            [ 8]  339 	sra	d
    00000136 CB 1B            [ 8]  340 	rr	e
    00000138 CB 18            [ 8]  341 	rr	b
    0000013A CB 19            [ 8]  342 	rr	c
    0000013C 3D               [ 4]  343 	dec	a
    0000013D 20 F5            [12]  344 	jr	NZ, 00103$
    0000013F E1               [12]  345 	pop	hl
    00000140 E5               [16]  346 	push	hl
    00000141 79               [ 4]  347 	ld	a, c
    00000142 22               [ 8]  348 	ld	(hl+), a
    00000143 70               [ 8]  349 	ld	(hl), b
                                    350 ;Source/Engine/Components/../Libraries/vec2.h:53: a->y = ((int32_t)a->y * s) >> 4;
    00000144 F8 0C            [12]  351 	ldhl	sp,#12
    00000146 2A               [ 8]  352 	ld	a, (hl+)
    00000147 5F               [ 4]  353 	ld	e, a
    00000148 56               [ 8]  354 	ld	d, (hl)
    00000149 21 02 00         [12]  355 	ld	hl, #0x0002
    0000014C 19               [ 8]  356 	add	hl, de
    0000014D E5               [16]  357 	push	hl
    0000014E 7D               [ 4]  358 	ld	a, l
    0000014F F8 06            [12]  359 	ldhl	sp,	#6
    00000151 77               [ 8]  360 	ld	(hl), a
    00000152 E1               [12]  361 	pop	hl
    00000153 7C               [ 4]  362 	ld	a, h
    00000154 F8 05            [12]  363 	ldhl	sp,	#5
    00000156 32               [ 8]  364 	ld	(hl-), a
    00000157 2A               [ 8]  365 	ld	a, (hl+)
    00000158 5F               [ 4]  366 	ld	e, a
    00000159 56               [ 8]  367 	ld	d, (hl)
    0000015A 1A               [ 8]  368 	ld	a, (de)
    0000015B 4F               [ 4]  369 	ld	c, a
    0000015C 13               [ 8]  370 	inc	de
    0000015D 1A               [ 8]  371 	ld	a, (de)
    0000015E 47               [ 4]  372 	ld	b, a
    0000015F 07               [ 4]  373 	rlca
    00000160 9F               [ 4]  374 	sbc	a, a
    00000161 5F               [ 4]  375 	ld	e, a
    00000162 57               [ 4]  376 	ld	d, a
    00000163 F8 08            [12]  377 	ldhl	sp,	#8
    00000165 2A               [ 8]  378 	ld	a, (hl+)
    00000166 66               [ 8]  379 	ld	h, (hl)
    00000167 6F               [ 4]  380 	ld	l, a
    00000168 E5               [16]  381 	push	hl
    00000169 F8 08            [12]  382 	ldhl	sp,	#8
    0000016B 2A               [ 8]  383 	ld	a, (hl+)
    0000016C 66               [ 8]  384 	ld	h, (hl)
    0000016D 6F               [ 4]  385 	ld	l, a
    0000016E E5               [16]  386 	push	hl
    0000016F CDr00r00         [24]  387 	call	__mullong
    00000172 3E 04            [ 8]  388 	ld	a, #0x04
    00000174                        389 00105$:
    00000174 CB 2A            [ 8]  390 	sra	d
    00000176 CB 1B            [ 8]  391 	rr	e
    00000178 CB 18            [ 8]  392 	rr	b
    0000017A CB 19            [ 8]  393 	rr	c
    0000017C 3D               [ 4]  394 	dec	a
    0000017D 20 F5            [12]  395 	jr	NZ, 00105$
    0000017F F8 04            [12]  396 	ldhl	sp,	#4
    00000181 2A               [ 8]  397 	ld	a, (hl+)
    00000182 66               [ 8]  398 	ld	h, (hl)
    00000183 6F               [ 4]  399 	ld	l, a
    00000184 79               [ 4]  400 	ld	a, c
    00000185 22               [ 8]  401 	ld	(hl+), a
    00000186 70               [ 8]  402 	ld	(hl), b
                                    403 ;Source/Engine/Components/../Libraries/vec2.h:54: }
    00000187 E8 0E            [16]  404 	add	sp, #14
    00000189 C9               [16]  405 	ret
                                    406 ;Source/Engine/Components/../Libraries/vec2.h:57: static inline void vec2_copy(vec2 *dest, const vec2 *src) {
                                    407 ;	---------------------------------
                                    408 ; Function vec2_copy
                                    409 ; ---------------------------------
    0000018A                        410 _vec2_copy:
    0000018A E8 FC            [16]  411 	add	sp, #-4
    0000018C F8 02            [12]  412 	ldhl	sp,	#2
    0000018E 7B               [ 4]  413 	ld	a, e
    0000018F 22               [ 8]  414 	ld	(hl+), a
                                    415 ;Source/Engine/Components/../Libraries/vec2.h:58: dest->x = src->x;
    00000190 7A               [ 4]  416 	ld	a, d
    00000191 32               [ 8]  417 	ld	(hl-), a
    00000192 33               [ 8]  418 	inc	sp
    00000193 33               [ 8]  419 	inc	sp
    00000194 C5               [16]  420 	push	bc
    00000195 2A               [ 8]  421 	ld	a, (hl+)
    00000196 4F               [ 4]  422 	ld	c, a
    00000197 46               [ 8]  423 	ld	b, (hl)
    00000198 D1               [12]  424 	pop	de
    00000199 D5               [16]  425 	push	de
    0000019A 1A               [ 8]  426 	ld	a, (de)
    0000019B 6F               [ 4]  427 	ld	l, a
    0000019C 13               [ 8]  428 	inc	de
    0000019D 1A               [ 8]  429 	ld	a, (de)
    0000019E 67               [ 4]  430 	ld	h, a
    0000019F 7D               [ 4]  431 	ld	a, l
    000001A0 02               [ 8]  432 	ld	(bc), a
    000001A1 03               [ 8]  433 	inc	bc
    000001A2 7C               [ 4]  434 	ld	a, h
    000001A3 02               [ 8]  435 	ld	(bc), a
                                    436 ;Source/Engine/Components/../Libraries/vec2.h:59: dest->y = src->y;
    000001A4 F8 02            [12]  437 	ldhl	sp,	#2
    000001A6 2A               [ 8]  438 	ld	a, (hl+)
    000001A7 4F               [ 4]  439 	ld	c, a
    000001A8 46               [ 8]  440 	ld	b, (hl)
    000001A9 03               [ 8]  441 	inc	bc
    000001AA 03               [ 8]  442 	inc	bc
    000001AB E1               [12]  443 	pop	hl
    000001AC E5               [16]  444 	push	hl
    000001AD 23               [ 8]  445 	inc	hl
    000001AE 23               [ 8]  446 	inc	hl
    000001AF 2A               [ 8]  447 	ld	a,	(hl+)
    000001B0 66               [ 8]  448 	ld	h, (hl)
    000001B1 02               [ 8]  449 	ld	(bc), a
    000001B2 03               [ 8]  450 	inc	bc
    000001B3 7C               [ 4]  451 	ld	a, h
    000001B4 02               [ 8]  452 	ld	(bc), a
                                    453 ;Source/Engine/Components/../Libraries/vec2.h:60: }
    000001B5 E8 04            [16]  454 	add	sp, #4
    000001B7 C9               [16]  455 	ret
                                    456 ;Source/Engine/Components/../Libraries/vec2.h:63: static inline bool vec2_equal(const vec2 *a, const vec2 *b) {
                                    457 ;	---------------------------------
                                    458 ; Function vec2_equal
                                    459 ; ---------------------------------
    000001B8                        460 _vec2_equal:
    000001B8 E8 F8            [16]  461 	add	sp, #-8
    000001BA F8 06            [12]  462 	ldhl	sp,	#6
    000001BC 7B               [ 4]  463 	ld	a, e
    000001BD 22               [ 8]  464 	ld	(hl+), a
    000001BE 72               [ 8]  465 	ld	(hl), d
    000001BF F8 04            [12]  466 	ldhl	sp,	#4
    000001C1 79               [ 4]  467 	ld	a, c
    000001C2 22               [ 8]  468 	ld	(hl+), a
                                    469 ;Source/Engine/Components/../Libraries/vec2.h:64: return a->x == b->x && a->y == b->y;
    000001C3 78               [ 4]  470 	ld	a, b
    000001C4 22               [ 8]  471 	ld	(hl+), a
    000001C5 2A               [ 8]  472 	ld	a, (hl+)
    000001C6 5F               [ 4]  473 	ld	e, a
    000001C7 3A               [ 8]  474 	ld	a, (hl-)
    000001C8 2B               [ 8]  475 	dec	hl
    000001C9 2B               [ 8]  476 	dec	hl
    000001CA 57               [ 4]  477 	ld	d, a
    000001CB 1A               [ 8]  478 	ld	a, (de)
    000001CC 4F               [ 4]  479 	ld	c, a
    000001CD 13               [ 8]  480 	inc	de
    000001CE 1A               [ 8]  481 	ld	a, (de)
    000001CF 47               [ 4]  482 	ld	b, a
    000001D0 2A               [ 8]  483 	ld	a, (hl+)
    000001D1 5F               [ 4]  484 	ld	e, a
    000001D2 56               [ 8]  485 	ld	d, (hl)
    000001D3 1A               [ 8]  486 	ld	a, (de)
    000001D4 6F               [ 4]  487 	ld	l, a
    000001D5 13               [ 8]  488 	inc	de
    000001D6 1A               [ 8]  489 	ld	a, (de)
    000001D7 67               [ 4]  490 	ld	h, a
    000001D8 7D               [ 4]  491 	ld	a, l
    000001D9 91               [ 4]  492 	sub	a, c
    000001DA 20 3D            [12]  493 	jr	NZ, 00103$
    000001DC 7C               [ 4]  494 	ld	a, h
    000001DD 90               [ 4]  495 	sub	a, b
    000001DE 20 39            [12]  496 	jr	NZ, 00103$
    000001E0 F8 06            [12]  497 	ldhl	sp,	#6
    000001E2 2A               [ 8]  498 	ld	a, (hl+)
    000001E3 4F               [ 4]  499 	ld	c, a
    000001E4 46               [ 8]  500 	ld	b, (hl)
    000001E5 03               [ 8]  501 	inc	bc
    000001E6 03               [ 8]  502 	inc	bc
    000001E7 59               [ 4]  503 	ld	e, c
    000001E8 50               [ 4]  504 	ld	d, b
    000001E9 1A               [ 8]  505 	ld	a, (de)
    000001EA F8 00            [12]  506 	ldhl	sp,	#0
    000001EC 22               [ 8]  507 	ld	(hl+), a
    000001ED 13               [ 8]  508 	inc	de
    000001EE 1A               [ 8]  509 	ld	a, (de)
    000001EF 77               [ 8]  510 	ld	(hl), a
    000001F0 F8 04            [12]  511 	ldhl	sp,#4
    000001F2 2A               [ 8]  512 	ld	a, (hl+)
    000001F3 5F               [ 4]  513 	ld	e, a
    000001F4 56               [ 8]  514 	ld	d, (hl)
    000001F5 21 02 00         [12]  515 	ld	hl, #0x0002
    000001F8 19               [ 8]  516 	add	hl, de
    000001F9 E5               [16]  517 	push	hl
    000001FA 7D               [ 4]  518 	ld	a, l
    000001FB F8 04            [12]  519 	ldhl	sp,	#4
    000001FD 77               [ 8]  520 	ld	(hl), a
    000001FE E1               [12]  521 	pop	hl
    000001FF 7C               [ 4]  522 	ld	a, h
    00000200 F8 03            [12]  523 	ldhl	sp,	#3
    00000202 32               [ 8]  524 	ld	(hl-), a
    00000203 2A               [ 8]  525 	ld	a, (hl+)
    00000204 5F               [ 4]  526 	ld	e, a
    00000205 3A               [ 8]  527 	ld	a, (hl-)
    00000206 57               [ 4]  528 	ld	d, a
    00000207 1A               [ 8]  529 	ld	a, (de)
    00000208 22               [ 8]  530 	ld	(hl+), a
    00000209 13               [ 8]  531 	inc	de
    0000020A 1A               [ 8]  532 	ld	a, (de)
    0000020B 77               [ 8]  533 	ld	(hl), a
    0000020C F8 00            [12]  534 	ldhl	sp,	#0
    0000020E 2A               [ 8]  535 	ld	a, (hl+)
    0000020F 23               [ 8]  536 	inc	hl
    00000210 96               [ 8]  537 	sub	a, (hl)
    00000211 20 06            [12]  538 	jr	NZ, 00115$
    00000213 2B               [ 8]  539 	dec	hl
    00000214 2A               [ 8]  540 	ld	a, (hl+)
    00000215 23               [ 8]  541 	inc	hl
    00000216 96               [ 8]  542 	sub	a, (hl)
    00000217 28 03            [12]  543 	jr	Z, 00104$
    00000219                        544 00115$:
    00000219                        545 00103$:
    00000219 AF               [ 4]  546 	xor	a, a
    0000021A 18 02            [12]  547 	jr	00105$
    0000021C                        548 00104$:
    0000021C 3E 01            [ 8]  549 	ld	a, #0x01
    0000021E                        550 00105$:
                                    551 ;Source/Engine/Components/../Libraries/vec2.h:65: }
    0000021E E8 08            [16]  552 	add	sp, #8
    00000220 C9               [16]  553 	ret
                                    554 ;Source/Engine/Components/sprite_component.h:132: static inline uint8_t getSpriteWidth(uint8_t entityID) {
                                    555 ;	---------------------------------
                                    556 ; Function getSpriteWidth
                                    557 ; ---------------------------------
    00000221                        558 _getSpriteWidth:
    00000221 E8 FC            [16]  559 	add	sp, #-4
    00000223 F8 02            [12]  560 	ldhl	sp,	#2
                                    561 ;Source/Engine/Components/sprite_component.h:133: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000225 32               [ 8]  562 	ld	(hl-), a
    00000226 AF               [ 4]  563 	xor	a, a
    00000227 22               [ 8]  564 	ld	(hl+), a
    00000228 23               [ 8]  565 	inc	hl
    00000229 36 00            [12]  566 	ld	(hl), #0x00
    0000022B                        567 00105$:
    0000022B F8 03            [12]  568 	ldhl	sp,	#3
    0000022D 7E               [ 8]  569 	ld	a, (hl)
    0000022E D6 32            [ 8]  570 	sub	a, #0x32
    00000230 30 2D            [12]  571 	jr	NC, 00103$
                                    572 ;Source/Engine/Components/sprite_component.h:134: if (spriteComponent.entityID[i] == entityID)
    00000232 11r00r00         [12]  573 	ld	de, #_spriteComponent
    00000235 6E               [ 8]  574 	ld	l, (hl)
    00000236 26 00            [ 8]  575 	ld	h, #0x00
    00000238 19               [ 8]  576 	add	hl, de
    00000239 4D               [ 4]  577 	ld	c, l
    0000023A 44               [ 4]  578 	ld	b, h
    0000023B 0A               [ 8]  579 	ld	a, (bc)
    0000023C 4F               [ 4]  580 	ld	c, a
    0000023D F8 02            [12]  581 	ldhl	sp,	#2
    0000023F 7E               [ 8]  582 	ld	a, (hl)
    00000240 91               [ 4]  583 	sub	a, c
    00000241 20 14            [12]  584 	jr	NZ, 00106$
                                    585 ;Source/Engine/Components/sprite_component.h:135: return spriteComponent.width[i];
    00000243 11rC8r00         [12]  586 	ld	de, #(_spriteComponent + 200)
    00000246 F8 01            [12]  587 	ldhl	sp,	#1
    00000248 6E               [ 8]  588 	ld	l, (hl)
    00000249 26 00            [ 8]  589 	ld	h, #0x00
    0000024B 19               [ 8]  590 	add	hl, de
    0000024C 33               [ 8]  591 	inc	sp
    0000024D 33               [ 8]  592 	inc	sp
    0000024E 5D               [ 4]  593 	ld	e, l
    0000024F 54               [ 4]  594 	ld	d, h
    00000250 D5               [16]  595 	push	de
    00000251 1A               [ 8]  596 	ld	a, (de)
    00000252 F8 03            [12]  597 	ldhl	sp,	#3
    00000254 77               [ 8]  598 	ld	(hl), a
    00000255 18 09            [12]  599 	jr	00107$
    00000257                        600 00106$:
                                    601 ;Source/Engine/Components/sprite_component.h:133: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000257 F8 03            [12]  602 	ldhl	sp,	#3
    00000259 34               [12]  603 	inc	(hl)
    0000025A 3A               [ 8]  604 	ld	a, (hl-)
    0000025B 2B               [ 8]  605 	dec	hl
    0000025C 77               [ 8]  606 	ld	(hl), a
    0000025D 18 CC            [12]  607 	jr	00105$
    0000025F                        608 00103$:
                                    609 ;Source/Engine/Components/sprite_component.h:136: return 0;
    0000025F AF               [ 4]  610 	xor	a, a
    00000260                        611 00107$:
                                    612 ;Source/Engine/Components/sprite_component.h:137: }
    00000260 E8 04            [16]  613 	add	sp, #4
    00000262 C9               [16]  614 	ret
                                    615 ;Source/Engine/Components/sprite_component.h:139: static inline void setSpriteWidth(uint8_t entityID, uint8_t width) {
                                    616 ;	---------------------------------
                                    617 ; Function setSpriteWidth
                                    618 ; ---------------------------------
    00000263                        619 _setSpriteWidth:
    00000263 E8 FB            [16]  620 	add	sp, #-5
    00000265 F8 03            [12]  621 	ldhl	sp,	#3
    00000267 32               [ 8]  622 	ld	(hl-), a
                                    623 ;Source/Engine/Components/sprite_component.h:140: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000268 7B               [ 4]  624 	ld	a, e
    00000269 32               [ 8]  625 	ld	(hl-), a
    0000026A 36 00            [12]  626 	ld	(hl), #0x00
    0000026C F8 04            [12]  627 	ldhl	sp,	#4
    0000026E 36 00            [12]  628 	ld	(hl), #0x00
    00000270                        629 00105$:
    00000270 F8 04            [12]  630 	ldhl	sp,	#4
    00000272 7E               [ 8]  631 	ld	a, (hl)
    00000273 D6 32            [ 8]  632 	sub	a, #0x32
    00000275 30 2E            [12]  633 	jr	NC, 00107$
                                    634 ;Source/Engine/Components/sprite_component.h:141: if (spriteComponent.entityID[i] == entityID) {
    00000277 11r00r00         [12]  635 	ld	de, #_spriteComponent
    0000027A 6E               [ 8]  636 	ld	l, (hl)
    0000027B 26 00            [ 8]  637 	ld	h, #0x00
    0000027D 19               [ 8]  638 	add	hl, de
    0000027E 4D               [ 4]  639 	ld	c, l
    0000027F 44               [ 4]  640 	ld	b, h
    00000280 0A               [ 8]  641 	ld	a, (bc)
    00000281 4F               [ 4]  642 	ld	c, a
    00000282 F8 03            [12]  643 	ldhl	sp,	#3
    00000284 7E               [ 8]  644 	ld	a, (hl)
    00000285 91               [ 4]  645 	sub	a, c
    00000286 20 14            [12]  646 	jr	NZ, 00106$
                                    647 ;Source/Engine/Components/sprite_component.h:142: spriteComponent.width[i] = width;
    00000288 11rC8r00         [12]  648 	ld	de, #(_spriteComponent + 200)
    0000028B F8 01            [12]  649 	ldhl	sp,	#1
    0000028D 6E               [ 8]  650 	ld	l, (hl)
    0000028E 26 00            [ 8]  651 	ld	h, #0x00
    00000290 19               [ 8]  652 	add	hl, de
    00000291 33               [ 8]  653 	inc	sp
    00000292 33               [ 8]  654 	inc	sp
    00000293 5D               [ 4]  655 	ld	e, l
    00000294 54               [ 4]  656 	ld	d, h
    00000295 D5               [16]  657 	push	de
    00000296 F8 02            [12]  658 	ldhl	sp,	#2
    00000298 7E               [ 8]  659 	ld	a, (hl)
    00000299 12               [ 8]  660 	ld	(de), a
                                    661 ;Source/Engine/Components/sprite_component.h:143: return;
    0000029A 18 09            [12]  662 	jr	00107$
    0000029C                        663 00106$:
                                    664 ;Source/Engine/Components/sprite_component.h:140: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    0000029C F8 04            [12]  665 	ldhl	sp,	#4
    0000029E 34               [12]  666 	inc	(hl)
    0000029F 7E               [ 8]  667 	ld	a, (hl)
    000002A0 F8 01            [12]  668 	ldhl	sp,	#1
    000002A2 77               [ 8]  669 	ld	(hl), a
    000002A3 18 CB            [12]  670 	jr	00105$
    000002A5                        671 00107$:
                                    672 ;Source/Engine/Components/sprite_component.h:145: }
    000002A5 E8 05            [16]  673 	add	sp, #5
    000002A7 C9               [16]  674 	ret
                                    675 ;Source/Engine/Components/sprite_component.h:147: static inline uint8_t getSpriteHeight(uint8_t entityID) {
                                    676 ;	---------------------------------
                                    677 ; Function getSpriteHeight
                                    678 ; ---------------------------------
    000002A8                        679 _getSpriteHeight:
    000002A8 E8 FC            [16]  680 	add	sp, #-4
    000002AA F8 02            [12]  681 	ldhl	sp,	#2
                                    682 ;Source/Engine/Components/sprite_component.h:148: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000002AC 32               [ 8]  683 	ld	(hl-), a
    000002AD AF               [ 4]  684 	xor	a, a
    000002AE 22               [ 8]  685 	ld	(hl+), a
    000002AF 23               [ 8]  686 	inc	hl
    000002B0 36 00            [12]  687 	ld	(hl), #0x00
    000002B2                        688 00105$:
    000002B2 F8 03            [12]  689 	ldhl	sp,	#3
    000002B4 7E               [ 8]  690 	ld	a, (hl)
    000002B5 D6 32            [ 8]  691 	sub	a, #0x32
    000002B7 30 2D            [12]  692 	jr	NC, 00103$
                                    693 ;Source/Engine/Components/sprite_component.h:149: if (spriteComponent.entityID[i] == entityID)
    000002B9 11r00r00         [12]  694 	ld	de, #_spriteComponent
    000002BC 6E               [ 8]  695 	ld	l, (hl)
    000002BD 26 00            [ 8]  696 	ld	h, #0x00
    000002BF 19               [ 8]  697 	add	hl, de
    000002C0 4D               [ 4]  698 	ld	c, l
    000002C1 44               [ 4]  699 	ld	b, h
    000002C2 0A               [ 8]  700 	ld	a, (bc)
    000002C3 4F               [ 4]  701 	ld	c, a
    000002C4 F8 02            [12]  702 	ldhl	sp,	#2
    000002C6 7E               [ 8]  703 	ld	a, (hl)
    000002C7 91               [ 4]  704 	sub	a, c
    000002C8 20 14            [12]  705 	jr	NZ, 00106$
                                    706 ;Source/Engine/Components/sprite_component.h:150: return spriteComponent.height[i];
    000002CA 11rFAr00         [12]  707 	ld	de, #(_spriteComponent + 250)
    000002CD F8 01            [12]  708 	ldhl	sp,	#1
    000002CF 6E               [ 8]  709 	ld	l, (hl)
    000002D0 26 00            [ 8]  710 	ld	h, #0x00
    000002D2 19               [ 8]  711 	add	hl, de
    000002D3 33               [ 8]  712 	inc	sp
    000002D4 33               [ 8]  713 	inc	sp
    000002D5 5D               [ 4]  714 	ld	e, l
    000002D6 54               [ 4]  715 	ld	d, h
    000002D7 D5               [16]  716 	push	de
    000002D8 1A               [ 8]  717 	ld	a, (de)
    000002D9 F8 03            [12]  718 	ldhl	sp,	#3
    000002DB 77               [ 8]  719 	ld	(hl), a
    000002DC 18 09            [12]  720 	jr	00107$
    000002DE                        721 00106$:
                                    722 ;Source/Engine/Components/sprite_component.h:148: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000002DE F8 03            [12]  723 	ldhl	sp,	#3
    000002E0 34               [12]  724 	inc	(hl)
    000002E1 3A               [ 8]  725 	ld	a, (hl-)
    000002E2 2B               [ 8]  726 	dec	hl
    000002E3 77               [ 8]  727 	ld	(hl), a
    000002E4 18 CC            [12]  728 	jr	00105$
    000002E6                        729 00103$:
                                    730 ;Source/Engine/Components/sprite_component.h:151: return 0;
    000002E6 AF               [ 4]  731 	xor	a, a
    000002E7                        732 00107$:
                                    733 ;Source/Engine/Components/sprite_component.h:152: }
    000002E7 E8 04            [16]  734 	add	sp, #4
    000002E9 C9               [16]  735 	ret
                                    736 ;Source/Engine/Components/sprite_component.h:154: static inline void setSpriteHeight(uint8_t entityID, uint8_t height) {
                                    737 ;	---------------------------------
                                    738 ; Function setSpriteHeight
                                    739 ; ---------------------------------
    000002EA                        740 _setSpriteHeight:
    000002EA E8 FB            [16]  741 	add	sp, #-5
    000002EC F8 03            [12]  742 	ldhl	sp,	#3
    000002EE 32               [ 8]  743 	ld	(hl-), a
                                    744 ;Source/Engine/Components/sprite_component.h:155: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000002EF 7B               [ 4]  745 	ld	a, e
    000002F0 32               [ 8]  746 	ld	(hl-), a
    000002F1 36 00            [12]  747 	ld	(hl), #0x00
    000002F3 F8 04            [12]  748 	ldhl	sp,	#4
    000002F5 36 00            [12]  749 	ld	(hl), #0x00
    000002F7                        750 00105$:
    000002F7 F8 04            [12]  751 	ldhl	sp,	#4
    000002F9 7E               [ 8]  752 	ld	a, (hl)
    000002FA D6 32            [ 8]  753 	sub	a, #0x32
    000002FC 30 2E            [12]  754 	jr	NC, 00107$
                                    755 ;Source/Engine/Components/sprite_component.h:156: if (spriteComponent.entityID[i] == entityID) {
    000002FE 11r00r00         [12]  756 	ld	de, #_spriteComponent
    00000301 6E               [ 8]  757 	ld	l, (hl)
    00000302 26 00            [ 8]  758 	ld	h, #0x00
    00000304 19               [ 8]  759 	add	hl, de
    00000305 4D               [ 4]  760 	ld	c, l
    00000306 44               [ 4]  761 	ld	b, h
    00000307 0A               [ 8]  762 	ld	a, (bc)
    00000308 4F               [ 4]  763 	ld	c, a
    00000309 F8 03            [12]  764 	ldhl	sp,	#3
    0000030B 7E               [ 8]  765 	ld	a, (hl)
    0000030C 91               [ 4]  766 	sub	a, c
    0000030D 20 14            [12]  767 	jr	NZ, 00106$
                                    768 ;Source/Engine/Components/sprite_component.h:157: spriteComponent.height[i] = height;
    0000030F 11rFAr00         [12]  769 	ld	de, #(_spriteComponent + 250)
    00000312 F8 01            [12]  770 	ldhl	sp,	#1
    00000314 6E               [ 8]  771 	ld	l, (hl)
    00000315 26 00            [ 8]  772 	ld	h, #0x00
    00000317 19               [ 8]  773 	add	hl, de
    00000318 33               [ 8]  774 	inc	sp
    00000319 33               [ 8]  775 	inc	sp
    0000031A 5D               [ 4]  776 	ld	e, l
    0000031B 54               [ 4]  777 	ld	d, h
    0000031C D5               [16]  778 	push	de
    0000031D F8 02            [12]  779 	ldhl	sp,	#2
    0000031F 7E               [ 8]  780 	ld	a, (hl)
    00000320 12               [ 8]  781 	ld	(de), a
                                    782 ;Source/Engine/Components/sprite_component.h:158: return;
    00000321 18 09            [12]  783 	jr	00107$
    00000323                        784 00106$:
                                    785 ;Source/Engine/Components/sprite_component.h:155: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000323 F8 04            [12]  786 	ldhl	sp,	#4
    00000325 34               [12]  787 	inc	(hl)
    00000326 7E               [ 8]  788 	ld	a, (hl)
    00000327 F8 01            [12]  789 	ldhl	sp,	#1
    00000329 77               [ 8]  790 	ld	(hl), a
    0000032A 18 CB            [12]  791 	jr	00105$
    0000032C                        792 00107$:
                                    793 ;Source/Engine/Components/sprite_component.h:160: }
    0000032C E8 05            [16]  794 	add	sp, #5
    0000032E C9               [16]  795 	ret
                                    796 ;Source/Engine/Components/sprite_component.h:163: static inline uint8_t getSpritePalette(uint8_t entityID) {
                                    797 ;	---------------------------------
                                    798 ; Function getSpritePalette
                                    799 ; ---------------------------------
    0000032F                        800 _getSpritePalette:
    0000032F E8 FA            [16]  801 	add	sp, #-6
    00000331 F8 04            [12]  802 	ldhl	sp,	#4
                                    803 ;Source/Engine/Components/sprite_component.h:164: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000333 32               [ 8]  804 	ld	(hl-), a
    00000334 AF               [ 4]  805 	xor	a, a
    00000335 22               [ 8]  806 	ld	(hl+), a
    00000336 23               [ 8]  807 	inc	hl
    00000337 36 00            [12]  808 	ld	(hl), #0x00
    00000339                        809 00105$:
    00000339 F8 05            [12]  810 	ldhl	sp,	#5
    0000033B 7E               [ 8]  811 	ld	a, (hl)
    0000033C D6 32            [ 8]  812 	sub	a, #0x32
    0000033E 30 5B            [12]  813 	jr	NC, 00103$
                                    814 ;Source/Engine/Components/sprite_component.h:165: if (spriteComponent.entityID[i] == entityID)
    00000340 11r00r00         [12]  815 	ld	de, #_spriteComponent
    00000343 6E               [ 8]  816 	ld	l, (hl)
    00000344 26 00            [ 8]  817 	ld	h, #0x00
    00000346 19               [ 8]  818 	add	hl, de
    00000347 4D               [ 4]  819 	ld	c, l
    00000348 44               [ 4]  820 	ld	b, h
    00000349 0A               [ 8]  821 	ld	a, (bc)
    0000034A 4F               [ 4]  822 	ld	c, a
    0000034B F8 04            [12]  823 	ldhl	sp,	#4
    0000034D 7E               [ 8]  824 	ld	a, (hl)
    0000034E 91               [ 4]  825 	sub	a, c
    0000034F 20 42            [12]  826 	jr	NZ, 00106$
                                    827 ;Source/Engine/Components/sprite_component.h:166: return SPRITE_GET_PALETTE(spriteComponent.flags[i]);
    00000351 11r90r01         [12]  828 	ld	de, #(_spriteComponent + 400)
    00000354 F8 03            [12]  829 	ldhl	sp,	#3
    00000356 6E               [ 8]  830 	ld	l, (hl)
    00000357 26 00            [ 8]  831 	ld	h, #0x00
    00000359 19               [ 8]  832 	add	hl, de
    0000035A E5               [16]  833 	push	hl
    0000035B 7D               [ 4]  834 	ld	a, l
    0000035C F8 04            [12]  835 	ldhl	sp,	#4
    0000035E 77               [ 8]  836 	ld	(hl), a
    0000035F E1               [12]  837 	pop	hl
    00000360 7C               [ 4]  838 	ld	a, h
    00000361 F8 03            [12]  839 	ldhl	sp,	#3
    00000363 32               [ 8]  840 	ld	(hl-), a
    00000364 2A               [ 8]  841 	ld	a, (hl+)
    00000365 5F               [ 4]  842 	ld	e, a
    00000366 2A               [ 8]  843 	ld	a, (hl+)
    00000367 23               [ 8]  844 	inc	hl
    00000368 57               [ 4]  845 	ld	d, a
    00000369 1A               [ 8]  846 	ld	a, (de)
    0000036A 77               [ 8]  847 	ld	(hl), a
    0000036B F8 02            [12]  848 	ldhl	sp,	#2
    0000036D 22               [ 8]  849 	ld	(hl+), a
    0000036E AF               [ 4]  850 	xor	a, a
    0000036F 32               [ 8]  851 	ld	(hl-), a
    00000370 3A               [ 8]  852 	ld	a, (hl-)
    00000371 2B               [ 8]  853 	dec	hl
    00000372 E6 38            [ 8]  854 	and	a, #0x38
    00000374 22               [ 8]  855 	ld	(hl+), a
    00000375 AF               [ 4]  856 	xor	a, a
    00000376 32               [ 8]  857 	ld	(hl-), a
    00000377 2A               [ 8]  858 	ld	a, (hl+)
    00000378 23               [ 8]  859 	inc	hl
    00000379 22               [ 8]  860 	ld	(hl+), a
    0000037A 36 00            [12]  861 	ld	(hl), #0x00
    0000037C CB 2E            [16]  862 	sra	(hl)
    0000037E 2B               [ 8]  863 	dec	hl
    0000037F CB 1E            [16]  864 	rr	(hl)
    00000381 23               [ 8]  865 	inc	hl
    00000382 CB 2E            [16]  866 	sra	(hl)
    00000384 2B               [ 8]  867 	dec	hl
    00000385 CB 1E            [16]  868 	rr	(hl)
    00000387 23               [ 8]  869 	inc	hl
    00000388 CB 2E            [16]  870 	sra	(hl)
    0000038A 2B               [ 8]  871 	dec	hl
    0000038B CB 1E            [16]  872 	rr	(hl)
    0000038D 7E               [ 8]  873 	ld	a, (hl)
    0000038E F8 05            [12]  874 	ldhl	sp,	#5
    00000390 77               [ 8]  875 	ld	(hl), a
    00000391 18 09            [12]  876 	jr	00107$
    00000393                        877 00106$:
                                    878 ;Source/Engine/Components/sprite_component.h:164: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000393 F8 05            [12]  879 	ldhl	sp,	#5
    00000395 34               [12]  880 	inc	(hl)
    00000396 3A               [ 8]  881 	ld	a, (hl-)
    00000397 2B               [ 8]  882 	dec	hl
    00000398 77               [ 8]  883 	ld	(hl), a
    00000399 18 9E            [12]  884 	jr	00105$
    0000039B                        885 00103$:
                                    886 ;Source/Engine/Components/sprite_component.h:167: return 0;
    0000039B AF               [ 4]  887 	xor	a, a
    0000039C                        888 00107$:
                                    889 ;Source/Engine/Components/sprite_component.h:168: }
    0000039C E8 06            [16]  890 	add	sp, #6
    0000039E C9               [16]  891 	ret
                                    892 ;Source/Engine/Components/sprite_component.h:170: static inline void setSpritePalette(uint8_t entityID, uint8_t palette) {
                                    893 ;	---------------------------------
                                    894 ; Function setSpritePalette
                                    895 ; ---------------------------------
    0000039F                        896 _setSpritePalette:
    0000039F E8 F9            [16]  897 	add	sp, #-7
    000003A1 F8 06            [12]  898 	ldhl	sp,	#6
    000003A3 32               [ 8]  899 	ld	(hl-), a
                                    900 ;Source/Engine/Components/sprite_component.h:171: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000003A4 7B               [ 4]  901 	ld	a, e
    000003A5 32               [ 8]  902 	ld	(hl-), a
    000003A6 2B               [ 8]  903 	dec	hl
    000003A7 AF               [ 4]  904 	xor	a, a
    000003A8 22               [ 8]  905 	ld	(hl+), a
    000003A9 77               [ 8]  906 	ld	(hl), a
    000003AA                        907 00105$:
    000003AA F8 04            [12]  908 	ldhl	sp,	#4
    000003AC 7E               [ 8]  909 	ld	a, (hl)
    000003AD D6 32            [ 8]  910 	sub	a, #0x32
    000003AF 30 44            [12]  911 	jr	NC, 00107$
                                    912 ;Source/Engine/Components/sprite_component.h:172: if (spriteComponent.entityID[i] == entityID) {
    000003B1 11r00r00         [12]  913 	ld	de, #_spriteComponent
    000003B4 6E               [ 8]  914 	ld	l, (hl)
    000003B5 26 00            [ 8]  915 	ld	h, #0x00
    000003B7 19               [ 8]  916 	add	hl, de
    000003B8 4D               [ 4]  917 	ld	c, l
    000003B9 44               [ 4]  918 	ld	b, h
    000003BA 0A               [ 8]  919 	ld	a, (bc)
    000003BB 4F               [ 4]  920 	ld	c, a
    000003BC F8 06            [12]  921 	ldhl	sp,	#6
    000003BE 7E               [ 8]  922 	ld	a, (hl)
    000003BF 91               [ 4]  923 	sub	a, c
    000003C0 20 2C            [12]  924 	jr	NZ, 00106$
                                    925 ;Source/Engine/Components/sprite_component.h:173: SPRITE_SET_PALETTE(spriteComponent.flags[i], palette);
    000003C2 11r90r01         [12]  926 	ld	de, #(_spriteComponent + 400)
    000003C5 F8 03            [12]  927 	ldhl	sp,	#3
    000003C7 6E               [ 8]  928 	ld	l, (hl)
    000003C8 26 00            [ 8]  929 	ld	h, #0x00
    000003CA 19               [ 8]  930 	add	hl, de
    000003CB 33               [ 8]  931 	inc	sp
    000003CC 33               [ 8]  932 	inc	sp
    000003CD 5D               [ 4]  933 	ld	e, l
    000003CE 54               [ 4]  934 	ld	d, h
    000003CF D5               [16]  935 	push	de
    000003D0 1A               [ 8]  936 	ld	a, (de)
    000003D1 F8 04            [12]  937 	ldhl	sp,	#4
    000003D3 32               [ 8]  938 	ld	(hl-), a
    000003D4 2B               [ 8]  939 	dec	hl
    000003D5 E6 C7            [ 8]  940 	and	a, #0xc7
    000003D7 77               [ 8]  941 	ld	(hl), a
    000003D8 F8 05            [12]  942 	ldhl	sp,	#5
    000003DA 3A               [ 8]  943 	ld	a, (hl-)
    000003DB E6 07            [ 8]  944 	and	a, #0x07
    000003DD 77               [ 8]  945 	ld	(hl), a
    000003DE 87               [ 4]  946 	add	a, a
    000003DF 87               [ 4]  947 	add	a, a
    000003E0 87               [ 4]  948 	add	a, a
    000003E1 77               [ 8]  949 	ld	(hl), a
    000003E2 3A               [ 8]  950 	ld	a, (hl-)
    000003E3 2B               [ 8]  951 	dec	hl
    000003E4 B6               [ 8]  952 	or	a, (hl)
    000003E5 23               [ 8]  953 	inc	hl
    000003E6 23               [ 8]  954 	inc	hl
    000003E7 77               [ 8]  955 	ld	(hl), a
    000003E8 D1               [12]  956 	pop	de
    000003E9 D5               [16]  957 	push	de
    000003EA 7E               [ 8]  958 	ld	a, (hl)
    000003EB 12               [ 8]  959 	ld	(de), a
                                    960 ;Source/Engine/Components/sprite_component.h:174: return;
    000003EC 18 07            [12]  961 	jr	00107$
    000003EE                        962 00106$:
                                    963 ;Source/Engine/Components/sprite_component.h:171: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000003EE F8 04            [12]  964 	ldhl	sp,	#4
    000003F0 34               [12]  965 	inc	(hl)
    000003F1 3A               [ 8]  966 	ld	a, (hl-)
    000003F2 77               [ 8]  967 	ld	(hl), a
    000003F3 18 B5            [12]  968 	jr	00105$
    000003F5                        969 00107$:
                                    970 ;Source/Engine/Components/sprite_component.h:176: }
    000003F5 E8 07            [16]  971 	add	sp, #7
    000003F7 C9               [16]  972 	ret
                                    973 ;Source/Engine/Components/sprite_component.h:178: static inline void setSpriteOffset(uint8_t entityID, vec2_i newOffset) {
                                    974 ;	---------------------------------
                                    975 ; Function setSpriteOffset
                                    976 ; ---------------------------------
    000003F8                        977 _setSpriteOffset:
    000003F8 3B               [ 8]  978 	dec	sp
    000003F9 F8 00            [12]  979 	ldhl	sp,	#0
    000003FB 77               [ 8]  980 	ld	(hl), a
                                    981 ;Source/Engine/Components/sprite_component.h:179: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000003FC 1E 00            [ 8]  982 	ld	e, #0x00
    000003FE 4B               [ 4]  983 	ld	c, e
    000003FF                        984 00105$:
    000003FF 79               [ 4]  985 	ld	a, c
    00000400 D6 32            [ 8]  986 	sub	a, #0x32
    00000402 30 28            [12]  987 	jr	NC, 00107$
                                    988 ;Source/Engine/Components/sprite_component.h:180: if (spriteComponent.entityID[i] == entityID) {
    00000404 21r00r00         [12]  989 	ld	hl, #_spriteComponent
    00000407 06 00            [ 8]  990 	ld	b, #0x00
    00000409 09               [ 8]  991 	add	hl, bc
    0000040A 46               [ 8]  992 	ld	b, (hl)
    0000040B F8 00            [12]  993 	ldhl	sp,	#0
    0000040D 7E               [ 8]  994 	ld	a, (hl)
    0000040E 90               [ 4]  995 	sub	a, b
    0000040F 20 17            [12]  996 	jr	NZ, 00106$
                                    997 ;Source/Engine/Components/sprite_component.h:181: spriteComponent.offset[i] = newOffset;
    00000411 F8 03            [12]  998 	ldhl	sp,	#3
    00000413 4D               [ 4]  999 	ld	c, l
    00000414 44               [ 4] 1000 	ld	b, h
    00000415 7B               [ 4] 1001 	ld	a, e
    00000416 87               [ 4] 1002 	add	a, a
    00000417 C6r2C            [ 8] 1003 	add	a, #<((_spriteComponent + 300))
    00000419 5F               [ 4] 1004 	ld	e, a
    0000041A 3E 00            [ 8] 1005 	ld	a, #0x00
    0000041C CEs01            [ 8] 1006 	adc	a, #>((_spriteComponent + 300))
    0000041E 57               [ 4] 1007 	ld	d, a
    0000041F 21 02 00         [12] 1008 	ld	hl, #0x0002
    00000422 E5               [16] 1009 	push	hl
    00000423 CDr00r00         [24] 1010 	call	___memcpy
                                   1011 ;Source/Engine/Components/sprite_component.h:182: return;
    00000426 18 04            [12] 1012 	jr	00107$
    00000428                       1013 00106$:
                                   1014 ;Source/Engine/Components/sprite_component.h:179: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000428 0C               [ 4] 1015 	inc	c
    00000429 59               [ 4] 1016 	ld	e, c
    0000042A 18 D3            [12] 1017 	jr	00105$
    0000042C                       1018 00107$:
                                   1019 ;Source/Engine/Components/sprite_component.h:184: }
    0000042C 33               [ 8] 1020 	inc	sp
    0000042D E1               [12] 1021 	pop	hl
    0000042E F1               [12] 1022 	pop	af
    0000042F E9               [ 4] 1023 	jp	(hl)
                                   1024 ;Source/Engine/Components/sprite_component.h:187: static inline bool getSpriteWorldFlag(uint8_t entityID) {
                                   1025 ;	---------------------------------
                                   1026 ; Function getSpriteWorldFlag
                                   1027 ; ---------------------------------
    00000430                       1028 _getSpriteWorldFlag:
    00000430 E8 FC            [16] 1029 	add	sp, #-4
    00000432 F8 02            [12] 1030 	ldhl	sp,	#2
                                   1031 ;Source/Engine/Components/sprite_component.h:188: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000434 32               [ 8] 1032 	ld	(hl-), a
    00000435 AF               [ 4] 1033 	xor	a, a
    00000436 22               [ 8] 1034 	ld	(hl+), a
    00000437 23               [ 8] 1035 	inc	hl
    00000438 36 00            [12] 1036 	ld	(hl), #0x00
    0000043A                       1037 00105$:
    0000043A F8 03            [12] 1038 	ldhl	sp,	#3
    0000043C 7E               [ 8] 1039 	ld	a, (hl)
    0000043D D6 32            [ 8] 1040 	sub	a, #0x32
    0000043F 30 39            [12] 1041 	jr	NC, 00103$
                                   1042 ;Source/Engine/Components/sprite_component.h:189: if (spriteComponent.entityID[i] == entityID)
    00000441 11r00r00         [12] 1043 	ld	de, #_spriteComponent
    00000444 6E               [ 8] 1044 	ld	l, (hl)
    00000445 26 00            [ 8] 1045 	ld	h, #0x00
    00000447 19               [ 8] 1046 	add	hl, de
    00000448 4D               [ 4] 1047 	ld	c, l
    00000449 44               [ 4] 1048 	ld	b, h
    0000044A 0A               [ 8] 1049 	ld	a, (bc)
    0000044B 4F               [ 4] 1050 	ld	c, a
    0000044C F8 02            [12] 1051 	ldhl	sp,	#2
    0000044E 7E               [ 8] 1052 	ld	a, (hl)
    0000044F 91               [ 4] 1053 	sub	a, c
    00000450 20 20            [12] 1054 	jr	NZ, 00106$
                                   1055 ;Source/Engine/Components/sprite_component.h:190: return (spriteComponent.flags[i] & SPRF_WORLD) != 0;
    00000452 11r90r01         [12] 1056 	ld	de, #(_spriteComponent + 400)
    00000455 F8 01            [12] 1057 	ldhl	sp,	#1
    00000457 6E               [ 8] 1058 	ld	l, (hl)
    00000458 26 00            [ 8] 1059 	ld	h, #0x00
    0000045A 19               [ 8] 1060 	add	hl, de
    0000045B 33               [ 8] 1061 	inc	sp
    0000045C 33               [ 8] 1062 	inc	sp
    0000045D 5D               [ 4] 1063 	ld	e, l
    0000045E 54               [ 4] 1064 	ld	d, h
    0000045F D5               [16] 1065 	push	de
    00000460 1A               [ 8] 1066 	ld	a, (de)
    00000461 F8 03            [12] 1067 	ldhl	sp,	#3
    00000463 77               [ 8] 1068 	ld	(hl), a
    00000464 E6 01            [ 8] 1069 	and	a, #0x01
    00000466 77               [ 8] 1070 	ld	(hl), a
    00000467 D6 01            [ 8] 1071 	sub	a, #0x01
    00000469 3E 00            [ 8] 1072 	ld	a, #0x00
    0000046B 17               [ 4] 1073 	rla
    0000046C 77               [ 8] 1074 	ld	(hl), a
    0000046D EE 01            [ 8] 1075 	xor	a, #0x01
    0000046F 77               [ 8] 1076 	ld	(hl), a
    00000470 18 09            [12] 1077 	jr	00107$
    00000472                       1078 00106$:
                                   1079 ;Source/Engine/Components/sprite_component.h:188: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000472 F8 03            [12] 1080 	ldhl	sp,	#3
    00000474 34               [12] 1081 	inc	(hl)
    00000475 3A               [ 8] 1082 	ld	a, (hl-)
    00000476 2B               [ 8] 1083 	dec	hl
    00000477 77               [ 8] 1084 	ld	(hl), a
    00000478 18 C0            [12] 1085 	jr	00105$
    0000047A                       1086 00103$:
                                   1087 ;Source/Engine/Components/sprite_component.h:191: return false;
    0000047A AF               [ 4] 1088 	xor	a, a
    0000047B                       1089 00107$:
                                   1090 ;Source/Engine/Components/sprite_component.h:192: }
    0000047B E8 04            [16] 1091 	add	sp, #4
    0000047D C9               [16] 1092 	ret
                                   1093 ;Source/Engine/Components/sprite_component.h:194: static inline void setSpriteWorldFlag(uint8_t entityID, bool isWorld) {
                                   1094 ;	---------------------------------
                                   1095 ; Function setSpriteWorldFlag
                                   1096 ; ---------------------------------
    0000047E                       1097 _setSpriteWorldFlag:
    0000047E 3B               [ 8] 1098 	dec	sp
    0000047F F8 00            [12] 1099 	ldhl	sp,	#0
    00000481 77               [ 8] 1100 	ld	(hl), a
    00000482 4B               [ 4] 1101 	ld	c, e
                                   1102 ;Source/Engine/Components/sprite_component.h:195: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000483 06 00            [ 8] 1103 	ld	b, #0x00
    00000485 58               [ 4] 1104 	ld	e, b
    00000486                       1105 00108$:
    00000486 7B               [ 4] 1106 	ld	a, e
    00000487 D6 32            [ 8] 1107 	sub	a, #0x32
    00000489 30 29            [12] 1108 	jr	NC, 00110$
                                   1109 ;Source/Engine/Components/sprite_component.h:196: if (spriteComponent.entityID[i] == entityID) {
    0000048B 21r00r00         [12] 1110 	ld	hl, #_spriteComponent
    0000048E 16 00            [ 8] 1111 	ld	d, #0x00
    00000490 19               [ 8] 1112 	add	hl, de
    00000491 56               [ 8] 1113 	ld	d, (hl)
    00000492 F8 00            [12] 1114 	ldhl	sp,	#0
    00000494 7E               [ 8] 1115 	ld	a, (hl)
    00000495 92               [ 4] 1116 	sub	a, d
    00000496 20 18            [12] 1117 	jr	NZ, 00109$
                                   1118 ;Source/Engine/Components/sprite_component.h:198: spriteComponent.flags[i] |= SPRF_WORLD;
    00000498 3Er90            [ 8] 1119 	ld	a, #<((_spriteComponent + 400))
    0000049A 80               [ 4] 1120 	add	a, b
    0000049B 5F               [ 4] 1121 	ld	e, a
    0000049C 3Es01            [ 8] 1122 	ld	a, #>((_spriteComponent + 400))
    0000049E CE 00            [ 8] 1123 	adc	a, #0x00
    000004A0 57               [ 4] 1124 	ld	d, a
    000004A1 1A               [ 8] 1125 	ld	a, (de)
                                   1126 ;Source/Engine/Components/sprite_component.h:197: if (isWorld)
    000004A2 CB 41            [ 8] 1127 	bit	0, c
    000004A4 28 05            [12] 1128 	jr	Z, 00102$
                                   1129 ;Source/Engine/Components/sprite_component.h:198: spriteComponent.flags[i] |= SPRF_WORLD;
    000004A6 CB C7            [ 8] 1130 	set	0, a
    000004A8 12               [ 8] 1131 	ld	(de), a
    000004A9 18 09            [12] 1132 	jr	00110$
    000004AB                       1133 00102$:
                                   1134 ;Source/Engine/Components/sprite_component.h:200: spriteComponent.flags[i] &= ~SPRF_WORLD;
    000004AB CB 87            [ 8] 1135 	res	0, a
    000004AD 12               [ 8] 1136 	ld	(de), a
                                   1137 ;Source/Engine/Components/sprite_component.h:201: return;
    000004AE 18 04            [12] 1138 	jr	00110$
    000004B0                       1139 00109$:
                                   1140 ;Source/Engine/Components/sprite_component.h:195: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000004B0 1C               [ 4] 1141 	inc	e
    000004B1 43               [ 4] 1142 	ld	b, e
    000004B2 18 D2            [12] 1143 	jr	00108$
    000004B4                       1144 00110$:
                                   1145 ;Source/Engine/Components/sprite_component.h:203: }
    000004B4 33               [ 8] 1146 	inc	sp
    000004B5 C9               [16] 1147 	ret
                                   1148 ;Source/Engine/Components/sprite_component.h:206: static inline bool getSpriteFlipX(uint8_t entityID) {
                                   1149 ;	---------------------------------
                                   1150 ; Function getSpriteFlipX
                                   1151 ; ---------------------------------
    000004B6                       1152 _getSpriteFlipX:
    000004B6 E8 FC            [16] 1153 	add	sp, #-4
    000004B8 F8 02            [12] 1154 	ldhl	sp,	#2
                                   1155 ;Source/Engine/Components/sprite_component.h:207: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000004BA 32               [ 8] 1156 	ld	(hl-), a
    000004BB AF               [ 4] 1157 	xor	a, a
    000004BC 22               [ 8] 1158 	ld	(hl+), a
    000004BD 23               [ 8] 1159 	inc	hl
    000004BE 36 00            [12] 1160 	ld	(hl), #0x00
    000004C0                       1161 00105$:
    000004C0 F8 03            [12] 1162 	ldhl	sp,	#3
    000004C2 7E               [ 8] 1163 	ld	a, (hl)
    000004C3 D6 32            [ 8] 1164 	sub	a, #0x32
    000004C5 30 39            [12] 1165 	jr	NC, 00103$
                                   1166 ;Source/Engine/Components/sprite_component.h:208: if (spriteComponent.entityID[i] == entityID)
    000004C7 11r00r00         [12] 1167 	ld	de, #_spriteComponent
    000004CA 6E               [ 8] 1168 	ld	l, (hl)
    000004CB 26 00            [ 8] 1169 	ld	h, #0x00
    000004CD 19               [ 8] 1170 	add	hl, de
    000004CE 4D               [ 4] 1171 	ld	c, l
    000004CF 44               [ 4] 1172 	ld	b, h
    000004D0 0A               [ 8] 1173 	ld	a, (bc)
    000004D1 4F               [ 4] 1174 	ld	c, a
    000004D2 F8 02            [12] 1175 	ldhl	sp,	#2
    000004D4 7E               [ 8] 1176 	ld	a, (hl)
    000004D5 91               [ 4] 1177 	sub	a, c
    000004D6 20 20            [12] 1178 	jr	NZ, 00106$
                                   1179 ;Source/Engine/Components/sprite_component.h:209: return (spriteComponent.flags[i] & SPRF_FLIPX) != 0;
    000004D8 11r90r01         [12] 1180 	ld	de, #(_spriteComponent + 400)
    000004DB F8 01            [12] 1181 	ldhl	sp,	#1
    000004DD 6E               [ 8] 1182 	ld	l, (hl)
    000004DE 26 00            [ 8] 1183 	ld	h, #0x00
    000004E0 19               [ 8] 1184 	add	hl, de
    000004E1 33               [ 8] 1185 	inc	sp
    000004E2 33               [ 8] 1186 	inc	sp
    000004E3 5D               [ 4] 1187 	ld	e, l
    000004E4 54               [ 4] 1188 	ld	d, h
    000004E5 D5               [16] 1189 	push	de
    000004E6 1A               [ 8] 1190 	ld	a, (de)
    000004E7 F8 03            [12] 1191 	ldhl	sp,	#3
    000004E9 77               [ 8] 1192 	ld	(hl), a
    000004EA E6 02            [ 8] 1193 	and	a, #0x02
    000004EC 77               [ 8] 1194 	ld	(hl), a
    000004ED D6 01            [ 8] 1195 	sub	a, #0x01
    000004EF 3E 00            [ 8] 1196 	ld	a, #0x00
    000004F1 17               [ 4] 1197 	rla
    000004F2 77               [ 8] 1198 	ld	(hl), a
    000004F3 EE 01            [ 8] 1199 	xor	a, #0x01
    000004F5 77               [ 8] 1200 	ld	(hl), a
    000004F6 18 09            [12] 1201 	jr	00107$
    000004F8                       1202 00106$:
                                   1203 ;Source/Engine/Components/sprite_component.h:207: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000004F8 F8 03            [12] 1204 	ldhl	sp,	#3
    000004FA 34               [12] 1205 	inc	(hl)
    000004FB 3A               [ 8] 1206 	ld	a, (hl-)
    000004FC 2B               [ 8] 1207 	dec	hl
    000004FD 77               [ 8] 1208 	ld	(hl), a
    000004FE 18 C0            [12] 1209 	jr	00105$
    00000500                       1210 00103$:
                                   1211 ;Source/Engine/Components/sprite_component.h:210: return false;
    00000500 AF               [ 4] 1212 	xor	a, a
    00000501                       1213 00107$:
                                   1214 ;Source/Engine/Components/sprite_component.h:211: }
    00000501 E8 04            [16] 1215 	add	sp, #4
    00000503 C9               [16] 1216 	ret
                                   1217 ;Source/Engine/Components/sprite_component.h:213: static inline void setSpriteFlipX(uint8_t entityID, bool flip) {
                                   1218 ;	---------------------------------
                                   1219 ; Function setSpriteFlipX
                                   1220 ; ---------------------------------
    00000504                       1221 _setSpriteFlipX:
    00000504 3B               [ 8] 1222 	dec	sp
    00000505 F8 00            [12] 1223 	ldhl	sp,	#0
    00000507 77               [ 8] 1224 	ld	(hl), a
    00000508 4B               [ 4] 1225 	ld	c, e
                                   1226 ;Source/Engine/Components/sprite_component.h:214: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000509 06 00            [ 8] 1227 	ld	b, #0x00
    0000050B 58               [ 4] 1228 	ld	e, b
    0000050C                       1229 00108$:
    0000050C 7B               [ 4] 1230 	ld	a, e
    0000050D D6 32            [ 8] 1231 	sub	a, #0x32
    0000050F 30 29            [12] 1232 	jr	NC, 00110$
                                   1233 ;Source/Engine/Components/sprite_component.h:215: if (spriteComponent.entityID[i] == entityID) {
    00000511 21r00r00         [12] 1234 	ld	hl, #_spriteComponent
    00000514 16 00            [ 8] 1235 	ld	d, #0x00
    00000516 19               [ 8] 1236 	add	hl, de
    00000517 56               [ 8] 1237 	ld	d, (hl)
    00000518 F8 00            [12] 1238 	ldhl	sp,	#0
    0000051A 7E               [ 8] 1239 	ld	a, (hl)
    0000051B 92               [ 4] 1240 	sub	a, d
    0000051C 20 18            [12] 1241 	jr	NZ, 00109$
                                   1242 ;Source/Engine/Components/sprite_component.h:217: spriteComponent.flags[i] |= SPRF_FLIPX;
    0000051E 3Er90            [ 8] 1243 	ld	a, #<((_spriteComponent + 400))
    00000520 80               [ 4] 1244 	add	a, b
    00000521 5F               [ 4] 1245 	ld	e, a
    00000522 3Es01            [ 8] 1246 	ld	a, #>((_spriteComponent + 400))
    00000524 CE 00            [ 8] 1247 	adc	a, #0x00
    00000526 57               [ 4] 1248 	ld	d, a
    00000527 1A               [ 8] 1249 	ld	a, (de)
                                   1250 ;Source/Engine/Components/sprite_component.h:216: if (flip)
    00000528 CB 41            [ 8] 1251 	bit	0, c
    0000052A 28 05            [12] 1252 	jr	Z, 00102$
                                   1253 ;Source/Engine/Components/sprite_component.h:217: spriteComponent.flags[i] |= SPRF_FLIPX;
    0000052C CB CF            [ 8] 1254 	set	1, a
    0000052E 12               [ 8] 1255 	ld	(de), a
    0000052F 18 09            [12] 1256 	jr	00110$
    00000531                       1257 00102$:
                                   1258 ;Source/Engine/Components/sprite_component.h:219: spriteComponent.flags[i] &= ~SPRF_FLIPX;
    00000531 CB 8F            [ 8] 1259 	res	1, a
    00000533 12               [ 8] 1260 	ld	(de), a
                                   1261 ;Source/Engine/Components/sprite_component.h:220: return;
    00000534 18 04            [12] 1262 	jr	00110$
    00000536                       1263 00109$:
                                   1264 ;Source/Engine/Components/sprite_component.h:214: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000536 1C               [ 4] 1265 	inc	e
    00000537 43               [ 4] 1266 	ld	b, e
    00000538 18 D2            [12] 1267 	jr	00108$
    0000053A                       1268 00110$:
                                   1269 ;Source/Engine/Components/sprite_component.h:222: }
    0000053A 33               [ 8] 1270 	inc	sp
    0000053B C9               [16] 1271 	ret
                                   1272 ;Source/Engine/Components/sprite_component.h:224: static inline bool getSpriteFlipY(uint8_t entityID) {
                                   1273 ;	---------------------------------
                                   1274 ; Function getSpriteFlipY
                                   1275 ; ---------------------------------
    0000053C                       1276 _getSpriteFlipY:
    0000053C E8 FC            [16] 1277 	add	sp, #-4
    0000053E F8 02            [12] 1278 	ldhl	sp,	#2
                                   1279 ;Source/Engine/Components/sprite_component.h:225: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000540 32               [ 8] 1280 	ld	(hl-), a
    00000541 AF               [ 4] 1281 	xor	a, a
    00000542 22               [ 8] 1282 	ld	(hl+), a
    00000543 23               [ 8] 1283 	inc	hl
    00000544 36 00            [12] 1284 	ld	(hl), #0x00
    00000546                       1285 00105$:
    00000546 F8 03            [12] 1286 	ldhl	sp,	#3
    00000548 7E               [ 8] 1287 	ld	a, (hl)
    00000549 D6 32            [ 8] 1288 	sub	a, #0x32
    0000054B 30 39            [12] 1289 	jr	NC, 00103$
                                   1290 ;Source/Engine/Components/sprite_component.h:226: if (spriteComponent.entityID[i] == entityID)
    0000054D 11r00r00         [12] 1291 	ld	de, #_spriteComponent
    00000550 6E               [ 8] 1292 	ld	l, (hl)
    00000551 26 00            [ 8] 1293 	ld	h, #0x00
    00000553 19               [ 8] 1294 	add	hl, de
    00000554 4D               [ 4] 1295 	ld	c, l
    00000555 44               [ 4] 1296 	ld	b, h
    00000556 0A               [ 8] 1297 	ld	a, (bc)
    00000557 4F               [ 4] 1298 	ld	c, a
    00000558 F8 02            [12] 1299 	ldhl	sp,	#2
    0000055A 7E               [ 8] 1300 	ld	a, (hl)
    0000055B 91               [ 4] 1301 	sub	a, c
    0000055C 20 20            [12] 1302 	jr	NZ, 00106$
                                   1303 ;Source/Engine/Components/sprite_component.h:227: return (spriteComponent.flags[i] & SPRF_FLIPY) != 0;
    0000055E 11r90r01         [12] 1304 	ld	de, #(_spriteComponent + 400)
    00000561 F8 01            [12] 1305 	ldhl	sp,	#1
    00000563 6E               [ 8] 1306 	ld	l, (hl)
    00000564 26 00            [ 8] 1307 	ld	h, #0x00
    00000566 19               [ 8] 1308 	add	hl, de
    00000567 33               [ 8] 1309 	inc	sp
    00000568 33               [ 8] 1310 	inc	sp
    00000569 5D               [ 4] 1311 	ld	e, l
    0000056A 54               [ 4] 1312 	ld	d, h
    0000056B D5               [16] 1313 	push	de
    0000056C 1A               [ 8] 1314 	ld	a, (de)
    0000056D F8 03            [12] 1315 	ldhl	sp,	#3
    0000056F 77               [ 8] 1316 	ld	(hl), a
    00000570 E6 04            [ 8] 1317 	and	a, #0x04
    00000572 77               [ 8] 1318 	ld	(hl), a
    00000573 D6 01            [ 8] 1319 	sub	a, #0x01
    00000575 3E 00            [ 8] 1320 	ld	a, #0x00
    00000577 17               [ 4] 1321 	rla
    00000578 77               [ 8] 1322 	ld	(hl), a
    00000579 EE 01            [ 8] 1323 	xor	a, #0x01
    0000057B 77               [ 8] 1324 	ld	(hl), a
    0000057C 18 09            [12] 1325 	jr	00107$
    0000057E                       1326 00106$:
                                   1327 ;Source/Engine/Components/sprite_component.h:225: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    0000057E F8 03            [12] 1328 	ldhl	sp,	#3
    00000580 34               [12] 1329 	inc	(hl)
    00000581 3A               [ 8] 1330 	ld	a, (hl-)
    00000582 2B               [ 8] 1331 	dec	hl
    00000583 77               [ 8] 1332 	ld	(hl), a
    00000584 18 C0            [12] 1333 	jr	00105$
    00000586                       1334 00103$:
                                   1335 ;Source/Engine/Components/sprite_component.h:228: return false;
    00000586 AF               [ 4] 1336 	xor	a, a
    00000587                       1337 00107$:
                                   1338 ;Source/Engine/Components/sprite_component.h:229: }
    00000587 E8 04            [16] 1339 	add	sp, #4
    00000589 C9               [16] 1340 	ret
                                   1341 ;Source/Engine/Components/sprite_component.h:231: static inline void setSpriteFlipY(uint8_t entityID, bool flip) {
                                   1342 ;	---------------------------------
                                   1343 ; Function setSpriteFlipY
                                   1344 ; ---------------------------------
    0000058A                       1345 _setSpriteFlipY:
    0000058A 3B               [ 8] 1346 	dec	sp
    0000058B F8 00            [12] 1347 	ldhl	sp,	#0
    0000058D 77               [ 8] 1348 	ld	(hl), a
    0000058E 4B               [ 4] 1349 	ld	c, e
                                   1350 ;Source/Engine/Components/sprite_component.h:232: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    0000058F 06 00            [ 8] 1351 	ld	b, #0x00
    00000591 58               [ 4] 1352 	ld	e, b
    00000592                       1353 00108$:
    00000592 7B               [ 4] 1354 	ld	a, e
    00000593 D6 32            [ 8] 1355 	sub	a, #0x32
    00000595 30 29            [12] 1356 	jr	NC, 00110$
                                   1357 ;Source/Engine/Components/sprite_component.h:233: if (spriteComponent.entityID[i] == entityID) {
    00000597 21r00r00         [12] 1358 	ld	hl, #_spriteComponent
    0000059A 16 00            [ 8] 1359 	ld	d, #0x00
    0000059C 19               [ 8] 1360 	add	hl, de
    0000059D 56               [ 8] 1361 	ld	d, (hl)
    0000059E F8 00            [12] 1362 	ldhl	sp,	#0
    000005A0 7E               [ 8] 1363 	ld	a, (hl)
    000005A1 92               [ 4] 1364 	sub	a, d
    000005A2 20 18            [12] 1365 	jr	NZ, 00109$
                                   1366 ;Source/Engine/Components/sprite_component.h:235: spriteComponent.flags[i] |= SPRF_FLIPY;
    000005A4 3Er90            [ 8] 1367 	ld	a, #<((_spriteComponent + 400))
    000005A6 80               [ 4] 1368 	add	a, b
    000005A7 5F               [ 4] 1369 	ld	e, a
    000005A8 3Es01            [ 8] 1370 	ld	a, #>((_spriteComponent + 400))
    000005AA CE 00            [ 8] 1371 	adc	a, #0x00
    000005AC 57               [ 4] 1372 	ld	d, a
    000005AD 1A               [ 8] 1373 	ld	a, (de)
                                   1374 ;Source/Engine/Components/sprite_component.h:234: if (flip)
    000005AE CB 41            [ 8] 1375 	bit	0, c
    000005B0 28 05            [12] 1376 	jr	Z, 00102$
                                   1377 ;Source/Engine/Components/sprite_component.h:235: spriteComponent.flags[i] |= SPRF_FLIPY;
    000005B2 CB D7            [ 8] 1378 	set	2, a
    000005B4 12               [ 8] 1379 	ld	(de), a
    000005B5 18 09            [12] 1380 	jr	00110$
    000005B7                       1381 00102$:
                                   1382 ;Source/Engine/Components/sprite_component.h:237: spriteComponent.flags[i] &= ~SPRF_FLIPY;
    000005B7 CB 97            [ 8] 1383 	res	2, a
    000005B9 12               [ 8] 1384 	ld	(de), a
                                   1385 ;Source/Engine/Components/sprite_component.h:238: return;
    000005BA 18 04            [12] 1386 	jr	00110$
    000005BC                       1387 00109$:
                                   1388 ;Source/Engine/Components/sprite_component.h:232: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000005BC 1C               [ 4] 1389 	inc	e
    000005BD 43               [ 4] 1390 	ld	b, e
    000005BE 18 D2            [12] 1391 	jr	00108$
    000005C0                       1392 00110$:
                                   1393 ;Source/Engine/Components/sprite_component.h:240: }
    000005C0 33               [ 8] 1394 	inc	sp
    000005C1 C9               [16] 1395 	ret
                                   1396 ;Source/Engine/Components/sprite_component.h:243: static inline bool getSpriteActive(uint8_t entityID) {
                                   1397 ;	---------------------------------
                                   1398 ; Function getSpriteActive
                                   1399 ; ---------------------------------
    000005C2                       1400 _getSpriteActive:
    000005C2 E8 FC            [16] 1401 	add	sp, #-4
    000005C4 F8 02            [12] 1402 	ldhl	sp,	#2
                                   1403 ;Source/Engine/Components/sprite_component.h:244: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    000005C6 32               [ 8] 1404 	ld	(hl-), a
    000005C7 AF               [ 4] 1405 	xor	a, a
    000005C8 22               [ 8] 1406 	ld	(hl+), a
    000005C9 23               [ 8] 1407 	inc	hl
    000005CA 36 00            [12] 1408 	ld	(hl), #0x00
    000005CC                       1409 00105$:
    000005CC F8 03            [12] 1410 	ldhl	sp,	#3
    000005CE 7E               [ 8] 1411 	ld	a, (hl)
    000005CF D6 32            [ 8] 1412 	sub	a, #0x32
    000005D1 30 39            [12] 1413 	jr	NC, 00103$
                                   1414 ;Source/Engine/Components/sprite_component.h:245: if (spriteComponent.entityID[i] == entityID)
    000005D3 11r00r00         [12] 1415 	ld	de, #_spriteComponent
    000005D6 6E               [ 8] 1416 	ld	l, (hl)
    000005D7 26 00            [ 8] 1417 	ld	h, #0x00
    000005D9 19               [ 8] 1418 	add	hl, de
    000005DA 4D               [ 4] 1419 	ld	c, l
    000005DB 44               [ 4] 1420 	ld	b, h
    000005DC 0A               [ 8] 1421 	ld	a, (bc)
    000005DD 4F               [ 4] 1422 	ld	c, a
    000005DE F8 02            [12] 1423 	ldhl	sp,	#2
    000005E0 7E               [ 8] 1424 	ld	a, (hl)
    000005E1 91               [ 4] 1425 	sub	a, c
    000005E2 20 20            [12] 1426 	jr	NZ, 00106$
                                   1427 ;Source/Engine/Components/sprite_component.h:246: return (spriteComponent.flags[i] & SPRF_ACTIVE) != 0;
    000005E4 11r90r01         [12] 1428 	ld	de, #(_spriteComponent + 400)
    000005E7 F8 01            [12] 1429 	ldhl	sp,	#1
    000005E9 6E               [ 8] 1430 	ld	l, (hl)
    000005EA 26 00            [ 8] 1431 	ld	h, #0x00
    000005EC 19               [ 8] 1432 	add	hl, de
    000005ED 33               [ 8] 1433 	inc	sp
    000005EE 33               [ 8] 1434 	inc	sp
    000005EF 5D               [ 4] 1435 	ld	e, l
    000005F0 54               [ 4] 1436 	ld	d, h
    000005F1 D5               [16] 1437 	push	de
    000005F2 1A               [ 8] 1438 	ld	a, (de)
    000005F3 F8 03            [12] 1439 	ldhl	sp,	#3
    000005F5 77               [ 8] 1440 	ld	(hl), a
    000005F6 E6 80            [ 8] 1441 	and	a, #0x80
    000005F8 77               [ 8] 1442 	ld	(hl), a
    000005F9 D6 01            [ 8] 1443 	sub	a, #0x01
    000005FB 3E 00            [ 8] 1444 	ld	a, #0x00
    000005FD 17               [ 4] 1445 	rla
    000005FE 77               [ 8] 1446 	ld	(hl), a
    000005FF EE 01            [ 8] 1447 	xor	a, #0x01
    00000601 77               [ 8] 1448 	ld	(hl), a
    00000602 18 09            [12] 1449 	jr	00107$
    00000604                       1450 00106$:
                                   1451 ;Source/Engine/Components/sprite_component.h:244: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000604 F8 03            [12] 1452 	ldhl	sp,	#3
    00000606 34               [12] 1453 	inc	(hl)
    00000607 3A               [ 8] 1454 	ld	a, (hl-)
    00000608 2B               [ 8] 1455 	dec	hl
    00000609 77               [ 8] 1456 	ld	(hl), a
    0000060A 18 C0            [12] 1457 	jr	00105$
    0000060C                       1458 00103$:
                                   1459 ;Source/Engine/Components/sprite_component.h:247: return false;
    0000060C AF               [ 4] 1460 	xor	a, a
    0000060D                       1461 00107$:
                                   1462 ;Source/Engine/Components/sprite_component.h:248: }
    0000060D E8 04            [16] 1463 	add	sp, #4
    0000060F C9               [16] 1464 	ret
                                   1465 ;Source/Engine/Components/sprite_component.h:250: static inline void setSpriteActive(uint8_t entityID, bool active) {
                                   1466 ;	---------------------------------
                                   1467 ; Function setSpriteActive
                                   1468 ; ---------------------------------
    00000610                       1469 _setSpriteActive:
    00000610 3B               [ 8] 1470 	dec	sp
    00000611 F8 00            [12] 1471 	ldhl	sp,	#0
    00000613 77               [ 8] 1472 	ld	(hl), a
    00000614 4B               [ 4] 1473 	ld	c, e
                                   1474 ;Source/Engine/Components/sprite_component.h:251: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000615 06 00            [ 8] 1475 	ld	b, #0x00
    00000617 58               [ 4] 1476 	ld	e, b
    00000618                       1477 00108$:
    00000618 7B               [ 4] 1478 	ld	a, e
    00000619 D6 32            [ 8] 1479 	sub	a, #0x32
    0000061B 30 29            [12] 1480 	jr	NC, 00110$
                                   1481 ;Source/Engine/Components/sprite_component.h:252: if (spriteComponent.entityID[i] == entityID) {
    0000061D 21r00r00         [12] 1482 	ld	hl, #_spriteComponent
    00000620 16 00            [ 8] 1483 	ld	d, #0x00
    00000622 19               [ 8] 1484 	add	hl, de
    00000623 56               [ 8] 1485 	ld	d, (hl)
    00000624 F8 00            [12] 1486 	ldhl	sp,	#0
    00000626 7E               [ 8] 1487 	ld	a, (hl)
    00000627 92               [ 4] 1488 	sub	a, d
    00000628 20 18            [12] 1489 	jr	NZ, 00109$
                                   1490 ;Source/Engine/Components/sprite_component.h:254: spriteComponent.flags[i] |= SPRF_ACTIVE;
    0000062A 3Er90            [ 8] 1491 	ld	a, #<((_spriteComponent + 400))
    0000062C 80               [ 4] 1492 	add	a, b
    0000062D 5F               [ 4] 1493 	ld	e, a
    0000062E 3Es01            [ 8] 1494 	ld	a, #>((_spriteComponent + 400))
    00000630 CE 00            [ 8] 1495 	adc	a, #0x00
    00000632 57               [ 4] 1496 	ld	d, a
    00000633 1A               [ 8] 1497 	ld	a, (de)
                                   1498 ;Source/Engine/Components/sprite_component.h:253: if (active)
    00000634 CB 41            [ 8] 1499 	bit	0, c
    00000636 28 05            [12] 1500 	jr	Z, 00102$
                                   1501 ;Source/Engine/Components/sprite_component.h:254: spriteComponent.flags[i] |= SPRF_ACTIVE;
    00000638 CB FF            [ 8] 1502 	set	7, a
    0000063A 12               [ 8] 1503 	ld	(de), a
    0000063B 18 09            [12] 1504 	jr	00110$
    0000063D                       1505 00102$:
                                   1506 ;Source/Engine/Components/sprite_component.h:256: spriteComponent.flags[i] &= ~SPRF_ACTIVE;
    0000063D CB BF            [ 8] 1507 	res	7, a
    0000063F 12               [ 8] 1508 	ld	(de), a
                                   1509 ;Source/Engine/Components/sprite_component.h:257: return;
    00000640 18 04            [12] 1510 	jr	00110$
    00000642                       1511 00109$:
                                   1512 ;Source/Engine/Components/sprite_component.h:251: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    00000642 1C               [ 4] 1513 	inc	e
    00000643 43               [ 4] 1514 	ld	b, e
    00000644 18 D2            [12] 1515 	jr	00108$
    00000646                       1516 00110$:
                                   1517 ;Source/Engine/Components/sprite_component.h:259: }
    00000646 33               [ 8] 1518 	inc	sp
    00000647 C9               [16] 1519 	ret
                                   1520 ;Source/Engine/Components/sprite_component.h:262: static inline LocalSprite getLocalSprite(uint8_t entityID) {
                                   1521 ;	---------------------------------
                                   1522 ; Function getLocalSprite
                                   1523 ; ---------------------------------
    00000648                       1524 _getLocalSprite:
    00000648 E8 F0            [16] 1525 	add	sp, #-16
    0000064A F8 0F            [12] 1526 	ldhl	sp,	#15
    0000064C 77               [ 8] 1527 	ld	(hl), a
                                   1528 ;Source/Engine/Components/sprite_component.h:263: LocalSprite s = {0};
    0000064D F8 00            [12] 1529 	ldhl	sp,	#0
    0000064F AF               [ 4] 1530 	xor	a, a
    00000650 22               [ 8] 1531 	ld	(hl+), a
    00000651 22               [ 8] 1532 	ld	(hl+), a
    00000652 AF               [ 4] 1533 	xor	a, a
    00000653 22               [ 8] 1534 	ld	(hl+), a
    00000654 22               [ 8] 1535 	ld	(hl+), a
    00000655 22               [ 8] 1536 	ld	(hl+), a
    00000656 AF               [ 4] 1537 	xor	a, a
    00000657 22               [ 8] 1538 	ld	(hl+), a
    00000658 22               [ 8] 1539 	ld	(hl+), a
    00000659 AF               [ 4] 1540 	xor	a, a
    0000065A 22               [ 8] 1541 	ld	(hl+), a
    0000065B 22               [ 8] 1542 	ld	(hl+), a
    0000065C AF               [ 4] 1543 	xor	a, a
    0000065D 22               [ 8] 1544 	ld	(hl+), a
    0000065E 22               [ 8] 1545 	ld	(hl+), a
                                   1546 ;Source/Engine/Components/sprite_component.h:264: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    0000065F AF               [ 4] 1547 	xor	a, a
    00000660 22               [ 8] 1548 	ld	(hl+), a
    00000661 77               [ 8] 1549 	ld	(hl), a
    00000662 0E 00            [ 8] 1550 	ld	c, #0x00
    00000664                       1551 00105$:
    00000664 79               [ 4] 1552 	ld	a, c
    00000665 D6 32            [ 8] 1553 	sub	a, #0x32
    00000667 D2r54r07         [16] 1554 	jp	NC, 00103$
                                   1555 ;Source/Engine/Components/sprite_component.h:265: if (spriteComponent.entityID[i] == entityID) {
    0000066A 21r00r00         [12] 1556 	ld	hl, #_spriteComponent
    0000066D 06 00            [ 8] 1557 	ld	b, #0x00
    0000066F 09               [ 8] 1558 	add	hl, bc
    00000670 46               [ 8] 1559 	ld	b, (hl)
    00000671 F8 0F            [12] 1560 	ldhl	sp,	#15
    00000673 7E               [ 8] 1561 	ld	a, (hl)
    00000674 90               [ 4] 1562 	sub	a, b
    00000675 C2r4Dr07         [16] 1563 	jp	NZ, 00106$
                                   1564 ;Source/Engine/Components/sprite_component.h:266: s.id        = spriteComponent.entityID[i];
    00000678 11r00r00         [12] 1565 	ld	de, #_spriteComponent
    0000067B F8 0C            [12] 1566 	ldhl	sp,	#12
    0000067D 6E               [ 8] 1567 	ld	l, (hl)
    0000067E 26 00            [ 8] 1568 	ld	h, #0x00
    00000680 19               [ 8] 1569 	add	hl, de
    00000681 4D               [ 4] 1570 	ld	c, l
    00000682 44               [ 4] 1571 	ld	b, h
    00000683 0A               [ 8] 1572 	ld	a, (bc)
    00000684 F8 00            [12] 1573 	ldhl	sp,	#0
    00000686 77               [ 8] 1574 	ld	(hl), a
                                   1575 ;Source/Engine/Components/sprite_component.h:267: s.width     = spriteComponent.width[i];
    00000687 11rC8r00         [12] 1576 	ld	de, #(_spriteComponent + 200)
    0000068A F8 0C            [12] 1577 	ldhl	sp,	#12
    0000068C 6E               [ 8] 1578 	ld	l, (hl)
    0000068D 26 00            [ 8] 1579 	ld	h, #0x00
    0000068F 19               [ 8] 1580 	add	hl, de
    00000690 4D               [ 4] 1581 	ld	c, l
    00000691 44               [ 4] 1582 	ld	b, h
    00000692 0A               [ 8] 1583 	ld	a, (bc)
    00000693 F8 01            [12] 1584 	ldhl	sp,	#1
    00000695 77               [ 8] 1585 	ld	(hl), a
                                   1586 ;Source/Engine/Components/sprite_component.h:268: s.height    = spriteComponent.height[i];
    00000696 11rFAr00         [12] 1587 	ld	de, #(_spriteComponent + 250)
    00000699 F8 0C            [12] 1588 	ldhl	sp,	#12
    0000069B 6E               [ 8] 1589 	ld	l, (hl)
    0000069C 26 00            [ 8] 1590 	ld	h, #0x00
    0000069E 19               [ 8] 1591 	add	hl, de
    0000069F 4D               [ 4] 1592 	ld	c, l
    000006A0 44               [ 4] 1593 	ld	b, h
    000006A1 0A               [ 8] 1594 	ld	a, (bc)
    000006A2 F8 02            [12] 1595 	ldhl	sp,	#2
    000006A4 77               [ 8] 1596 	ld	(hl), a
                                   1597 ;Source/Engine/Components/sprite_component.h:269: s.offset    = spriteComponent.offset[i];
    000006A5 F8 0C            [12] 1598 	ldhl	sp,	#12
    000006A7 2A               [ 8] 1599 	ld	a, (hl+)
    000006A8 23               [ 8] 1600 	inc	hl
    000006A9 87               [ 4] 1601 	add	a, a
    000006AA 77               [ 8] 1602 	ld	(hl), a
    000006AB 11r2Cr01         [12] 1603 	ld	de, #(_spriteComponent + 300)
    000006AE 6E               [ 8] 1604 	ld	l, (hl)
    000006AF 26 00            [ 8] 1605 	ld	h, #0x00
    000006B1 19               [ 8] 1606 	add	hl, de
    000006B2 4D               [ 4] 1607 	ld	c, l
    000006B3 44               [ 4] 1608 	ld	b, h
    000006B4 11 02 00         [12] 1609 	ld	de, #0x0002
    000006B7 D5               [16] 1610 	push	de
    000006B8 21 08 00         [12] 1611 	ld	hl, #8
    000006BB 39               [ 8] 1612 	add	hl, sp
    000006BC 5D               [ 4] 1613 	ld	e, l
    000006BD 54               [ 4] 1614 	ld	d, h
    000006BE CDr00r00         [24] 1615 	call	___memcpy
                                   1616 ;Source/Engine/Components/sprite_component.h:270: s.flags     = spriteComponent.flags[i];
    000006C1 11r90r01         [12] 1617 	ld	de, #(_spriteComponent + 400)
    000006C4 F8 0C            [12] 1618 	ldhl	sp,	#12
    000006C6 6E               [ 8] 1619 	ld	l, (hl)
    000006C7 26 00            [ 8] 1620 	ld	h, #0x00
    000006C9 19               [ 8] 1621 	add	hl, de
    000006CA 4D               [ 4] 1622 	ld	c, l
    000006CB 44               [ 4] 1623 	ld	b, h
    000006CC 0A               [ 8] 1624 	ld	a, (bc)
    000006CD F8 0A            [12] 1625 	ldhl	sp,	#10
    000006CF 77               [ 8] 1626 	ld	(hl), a
                                   1627 ;Source/Engine/Components/sprite_component.h:271: s.tileData  = spriteComponent.tileData[i];
    000006D0 11r32r00         [12] 1628 	ld	de, #(_spriteComponent + 50)
    000006D3 F8 0E            [12] 1629 	ldhl	sp,	#14
    000006D5 6E               [ 8] 1630 	ld	l, (hl)
    000006D6 26 00            [ 8] 1631 	ld	h, #0x00
    000006D8 19               [ 8] 1632 	add	hl, de
    000006D9 E5               [16] 1633 	push	hl
    000006DA 7D               [ 4] 1634 	ld	a, l
    000006DB F8 0F            [12] 1635 	ldhl	sp,	#15
    000006DD 77               [ 8] 1636 	ld	(hl), a
    000006DE E1               [12] 1637 	pop	hl
    000006DF 7C               [ 4] 1638 	ld	a, h
    000006E0 F8 0E            [12] 1639 	ldhl	sp,	#14
    000006E2 32               [ 8] 1640 	ld	(hl-), a
    000006E3 2A               [ 8] 1641 	ld	a, (hl+)
    000006E4 5F               [ 4] 1642 	ld	e, a
    000006E5 56               [ 8] 1643 	ld	d, (hl)
    000006E6 1A               [ 8] 1644 	ld	a, (de)
    000006E7 6F               [ 4] 1645 	ld	l, a
    000006E8 13               [ 8] 1646 	inc	de
    000006E9 1A               [ 8] 1647 	ld	a, (de)
    000006EA 67               [ 4] 1648 	ld	h, a
    000006EB E5               [16] 1649 	push	hl
    000006EC 7D               [ 4] 1650 	ld	a, l
    000006ED F8 05            [12] 1651 	ldhl	sp,	#5
    000006EF 77               [ 8] 1652 	ld	(hl), a
    000006F0 E1               [12] 1653 	pop	hl
    000006F1 7C               [ 4] 1654 	ld	a, h
    000006F2 F8 04            [12] 1655 	ldhl	sp,	#4
    000006F4 77               [ 8] 1656 	ld	(hl), a
                                   1657 ;Source/Engine/Components/sprite_component.h:272: s.tileIndex = spriteComponent.tileIndex[i];
    000006F5 11r96r00         [12] 1658 	ld	de, #(_spriteComponent + 150)
    000006F8 F8 0C            [12] 1659 	ldhl	sp,	#12
    000006FA 6E               [ 8] 1660 	ld	l, (hl)
    000006FB 26 00            [ 8] 1661 	ld	h, #0x00
    000006FD 19               [ 8] 1662 	add	hl, de
    000006FE 5D               [ 4] 1663 	ld	e, l
    000006FF 54               [ 4] 1664 	ld	d, h
    00000700 1A               [ 8] 1665 	ld	a, (de)
    00000701 F8 05            [12] 1666 	ldhl	sp,	#5
    00000703 77               [ 8] 1667 	ld	(hl), a
                                   1668 ;Source/Engine/Components/sprite_component.h:273: s.isWorld   = (spriteComponent.flags[i] & SPRF_WORLD) != 0;
    00000704 0A               [ 8] 1669 	ld	a, (bc)
    00000705 E6 01            [ 8] 1670 	and	a, #0x01
    00000707 D6 01            [ 8] 1671 	sub	a, #0x01
    00000709 3E 00            [ 8] 1672 	ld	a, #0x00
    0000070B 17               [ 4] 1673 	rla
    0000070C EE 01            [ 8] 1674 	xor	a, #0x01
    0000070E F8 08            [12] 1675 	ldhl	sp,	#8
                                   1676 ;Source/Engine/Components/sprite_component.h:274: s.visible   = (spriteComponent.flags[i] & SPRF_ACTIVE) != 0;
    00000710 22               [ 8] 1677 	ld	(hl+), a
    00000711 0A               [ 8] 1678 	ld	a, (bc)
    00000712 E6 80            [ 8] 1679 	and	a, #0x80
    00000714 D6 01            [ 8] 1680 	sub	a, #0x01
    00000716 3E 00            [ 8] 1681 	ld	a, #0x00
    00000718 17               [ 4] 1682 	rla
    00000719 EE 01            [ 8] 1683 	xor	a, #0x01
                                   1684 ;Source/Engine/Components/sprite_component.h:275: s.flipProps = spriteComponent.flags[i] & (SPRF_FLIPX | SPRF_FLIPY);
    0000071B 22               [ 8] 1685 	ld	(hl+), a
    0000071C 23               [ 8] 1686 	inc	hl
    0000071D 0A               [ 8] 1687 	ld	a, (bc)
    0000071E E6 06            [ 8] 1688 	and	a, #0x06
    00000720 77               [ 8] 1689 	ld	(hl), a
                                   1690 ;Source/Engine/Components/sprite_component.h:276: return s;
    00000721 F8 12            [12] 1691 	ldhl	sp,	#18
    00000723 2A               [ 8] 1692 	ld	a, (hl+)
    00000724 4F               [ 4] 1693 	ld	c, a
    00000725 46               [ 8] 1694 	ld	b, (hl)
    00000726 F8 00            [12] 1695 	ldhl	sp,	#0
    00000728 2A               [ 8] 1696 	ld	a, (hl+)
    00000729 02               [ 8] 1697 	ld	(bc), a
    0000072A 03               [ 8] 1698 	inc	bc
    0000072B 2A               [ 8] 1699 	ld	a, (hl+)
    0000072C 02               [ 8] 1700 	ld	(bc), a
    0000072D 03               [ 8] 1701 	inc	bc
    0000072E 2A               [ 8] 1702 	ld	a, (hl+)
    0000072F 02               [ 8] 1703 	ld	(bc), a
    00000730 03               [ 8] 1704 	inc	bc
    00000731 2A               [ 8] 1705 	ld	a, (hl+)
    00000732 02               [ 8] 1706 	ld	(bc), a
    00000733 03               [ 8] 1707 	inc	bc
    00000734 2A               [ 8] 1708 	ld	a, (hl+)
    00000735 02               [ 8] 1709 	ld	(bc), a
    00000736 03               [ 8] 1710 	inc	bc
    00000737 2A               [ 8] 1711 	ld	a, (hl+)
    00000738 02               [ 8] 1712 	ld	(bc), a
    00000739 03               [ 8] 1713 	inc	bc
    0000073A 2A               [ 8] 1714 	ld	a, (hl+)
    0000073B 02               [ 8] 1715 	ld	(bc), a
    0000073C 03               [ 8] 1716 	inc	bc
    0000073D 2A               [ 8] 1717 	ld	a, (hl+)
    0000073E 02               [ 8] 1718 	ld	(bc), a
    0000073F 03               [ 8] 1719 	inc	bc
    00000740 2A               [ 8] 1720 	ld	a, (hl+)
    00000741 02               [ 8] 1721 	ld	(bc), a
    00000742 03               [ 8] 1722 	inc	bc
    00000743 2A               [ 8] 1723 	ld	a, (hl+)
    00000744 02               [ 8] 1724 	ld	(bc), a
    00000745 03               [ 8] 1725 	inc	bc
    00000746 2A               [ 8] 1726 	ld	a, (hl+)
    00000747 02               [ 8] 1727 	ld	(bc), a
    00000748 03               [ 8] 1728 	inc	bc
    00000749 7E               [ 8] 1729 	ld	a, (hl)
    0000074A 02               [ 8] 1730 	ld	(bc), a
    0000074B 18 31            [12] 1731 	jr	00107$
    0000074D                       1732 00106$:
                                   1733 ;Source/Engine/Components/sprite_component.h:264: for (uint8_t i = 0; i < SPRITE_POOL_SIZE; i++)
    0000074D 0C               [ 4] 1734 	inc	c
    0000074E F8 0C            [12] 1735 	ldhl	sp,	#12
    00000750 71               [ 8] 1736 	ld	(hl), c
    00000751 C3r64r06         [16] 1737 	jp	00105$
    00000754                       1738 00103$:
                                   1739 ;Source/Engine/Components/sprite_component.h:278: return s;
    00000754 F8 12            [12] 1740 	ldhl	sp,	#18
    00000756 2A               [ 8] 1741 	ld	a, (hl+)
    00000757 4F               [ 4] 1742 	ld	c, a
    00000758 46               [ 8] 1743 	ld	b, (hl)
    00000759 F8 00            [12] 1744 	ldhl	sp,	#0
    0000075B 2A               [ 8] 1745 	ld	a, (hl+)
    0000075C 02               [ 8] 1746 	ld	(bc), a
    0000075D 03               [ 8] 1747 	inc	bc
    0000075E 2A               [ 8] 1748 	ld	a, (hl+)
    0000075F 02               [ 8] 1749 	ld	(bc), a
    00000760 03               [ 8] 1750 	inc	bc
    00000761 2A               [ 8] 1751 	ld	a, (hl+)
    00000762 02               [ 8] 1752 	ld	(bc), a
    00000763 03               [ 8] 1753 	inc	bc
    00000764 2A               [ 8] 1754 	ld	a, (hl+)
    00000765 02               [ 8] 1755 	ld	(bc), a
    00000766 03               [ 8] 1756 	inc	bc
    00000767 2A               [ 8] 1757 	ld	a, (hl+)
    00000768 02               [ 8] 1758 	ld	(bc), a
    00000769 03               [ 8] 1759 	inc	bc
    0000076A 2A               [ 8] 1760 	ld	a, (hl+)
    0000076B 02               [ 8] 1761 	ld	(bc), a
    0000076C 03               [ 8] 1762 	inc	bc
    0000076D 2A               [ 8] 1763 	ld	a, (hl+)
    0000076E 02               [ 8] 1764 	ld	(bc), a
    0000076F 03               [ 8] 1765 	inc	bc
    00000770 2A               [ 8] 1766 	ld	a, (hl+)
    00000771 02               [ 8] 1767 	ld	(bc), a
    00000772 03               [ 8] 1768 	inc	bc
    00000773 2A               [ 8] 1769 	ld	a, (hl+)
    00000774 02               [ 8] 1770 	ld	(bc), a
    00000775 03               [ 8] 1771 	inc	bc
    00000776 2A               [ 8] 1772 	ld	a, (hl+)
    00000777 02               [ 8] 1773 	ld	(bc), a
    00000778 03               [ 8] 1774 	inc	bc
    00000779 2A               [ 8] 1775 	ld	a, (hl+)
    0000077A 02               [ 8] 1776 	ld	(bc), a
    0000077B 03               [ 8] 1777 	inc	bc
    0000077C 7E               [ 8] 1778 	ld	a, (hl)
    0000077D 02               [ 8] 1779 	ld	(bc), a
    0000077E                       1780 00107$:
                                   1781 ;Source/Engine/Components/sprite_component.h:279: }
    0000077E E8 10            [16] 1782 	add	sp, #16
    00000780 E1               [12] 1783 	pop	hl
    00000781 F1               [12] 1784 	pop	af
    00000782 E9               [ 4] 1785 	jp	(hl)
                                   1786 	.area _CODE
                                   1787 	.area _INITIALIZER
    00000000                       1788 __xinit__spriteComponent:
    00000000 00                    1789 	.db #0x00	; 0
    00000001 00                    1790 	.db 0x00
    00000002 00                    1791 	.db 0x00
    00000003 00                    1792 	.db 0x00
    00000004 00                    1793 	.db 0x00
    00000005 00                    1794 	.db 0x00
    00000006 00                    1795 	.db 0x00
    00000007 00                    1796 	.db 0x00
    00000008 00                    1797 	.db 0x00
    00000009 00                    1798 	.db 0x00
    0000000A 00                    1799 	.db 0x00
    0000000B 00                    1800 	.db 0x00
    0000000C 00                    1801 	.db 0x00
    0000000D 00                    1802 	.db 0x00
    0000000E 00                    1803 	.db 0x00
    0000000F 00                    1804 	.db 0x00
    00000010 00                    1805 	.db 0x00
    00000011 00                    1806 	.db 0x00
    00000012 00                    1807 	.db 0x00
    00000013 00                    1808 	.db 0x00
    00000014 00                    1809 	.db 0x00
    00000015 00                    1810 	.db 0x00
    00000016 00                    1811 	.db 0x00
    00000017 00                    1812 	.db 0x00
    00000018 00                    1813 	.db 0x00
    00000019 00                    1814 	.db 0x00
    0000001A 00                    1815 	.db 0x00
    0000001B 00                    1816 	.db 0x00
    0000001C 00                    1817 	.db 0x00
    0000001D 00                    1818 	.db 0x00
    0000001E 00                    1819 	.db 0x00
    0000001F 00                    1820 	.db 0x00
    00000020 00                    1821 	.db 0x00
    00000021 00                    1822 	.db 0x00
    00000022 00                    1823 	.db 0x00
    00000023 00                    1824 	.db 0x00
    00000024 00                    1825 	.db 0x00
    00000025 00                    1826 	.db 0x00
    00000026 00                    1827 	.db 0x00
    00000027 00                    1828 	.db 0x00
    00000028 00                    1829 	.db 0x00
    00000029 00                    1830 	.db 0x00
    0000002A 00                    1831 	.db 0x00
    0000002B 00                    1832 	.db 0x00
    0000002C 00                    1833 	.db 0x00
    0000002D 00                    1834 	.db 0x00
    0000002E 00                    1835 	.db 0x00
    0000002F 00                    1836 	.db 0x00
    00000030 00                    1837 	.db 0x00
    00000031 00                    1838 	.db 0x00
    00000032 00 00                 1839 	.dw #0x0000
    00000034 00                    1840 	.db 0x00
    00000035 00                    1841 	.db 0x00
    00000036 00                    1842 	.db 0x00
    00000037 00                    1843 	.db 0x00
    00000038 00                    1844 	.db 0x00
    00000039 00                    1845 	.db 0x00
    0000003A 00                    1846 	.db 0x00
    0000003B 00                    1847 	.db 0x00
    0000003C 00                    1848 	.db 0x00
    0000003D 00                    1849 	.db 0x00
    0000003E 00                    1850 	.db 0x00
    0000003F 00                    1851 	.db 0x00
    00000040 00                    1852 	.db 0x00
    00000041 00                    1853 	.db 0x00
    00000042 00                    1854 	.db 0x00
    00000043 00                    1855 	.db 0x00
    00000044 00                    1856 	.db 0x00
    00000045 00                    1857 	.db 0x00
    00000046 00                    1858 	.db 0x00
    00000047 00                    1859 	.db 0x00
    00000048 00                    1860 	.db 0x00
    00000049 00                    1861 	.db 0x00
    0000004A 00                    1862 	.db 0x00
    0000004B 00                    1863 	.db 0x00
    0000004C 00                    1864 	.db 0x00
    0000004D 00                    1865 	.db 0x00
    0000004E 00                    1866 	.db 0x00
    0000004F 00                    1867 	.db 0x00
    00000050 00                    1868 	.db 0x00
    00000051 00                    1869 	.db 0x00
    00000052 00                    1870 	.db 0x00
    00000053 00                    1871 	.db 0x00
    00000054 00                    1872 	.db 0x00
    00000055 00                    1873 	.db 0x00
    00000056 00                    1874 	.db 0x00
    00000057 00                    1875 	.db 0x00
    00000058 00                    1876 	.db 0x00
    00000059 00                    1877 	.db 0x00
    0000005A 00                    1878 	.db 0x00
    0000005B 00                    1879 	.db 0x00
    0000005C 00                    1880 	.db 0x00
    0000005D 00                    1881 	.db 0x00
    0000005E 00                    1882 	.db 0x00
    0000005F 00                    1883 	.db 0x00
    00000060 00                    1884 	.db 0x00
    00000061 00                    1885 	.db 0x00
    00000062 00                    1886 	.db 0x00
    00000063 00                    1887 	.db 0x00
    00000064 00                    1888 	.db 0x00
    00000065 00                    1889 	.db 0x00
    00000066 00                    1890 	.db 0x00
    00000067 00                    1891 	.db 0x00
    00000068 00                    1892 	.db 0x00
    00000069 00                    1893 	.db 0x00
    0000006A 00                    1894 	.db 0x00
    0000006B 00                    1895 	.db 0x00
    0000006C 00                    1896 	.db 0x00
    0000006D 00                    1897 	.db 0x00
    0000006E 00                    1898 	.db 0x00
    0000006F 00                    1899 	.db 0x00
    00000070 00                    1900 	.db 0x00
    00000071 00                    1901 	.db 0x00
    00000072 00                    1902 	.db 0x00
    00000073 00                    1903 	.db 0x00
    00000074 00                    1904 	.db 0x00
    00000075 00                    1905 	.db 0x00
    00000076 00                    1906 	.db 0x00
    00000077 00                    1907 	.db 0x00
    00000078 00                    1908 	.db 0x00
    00000079 00                    1909 	.db 0x00
    0000007A 00                    1910 	.db 0x00
    0000007B 00                    1911 	.db 0x00
    0000007C 00                    1912 	.db 0x00
    0000007D 00                    1913 	.db 0x00
    0000007E 00                    1914 	.db 0x00
    0000007F 00                    1915 	.db 0x00
    00000080 00                    1916 	.db 0x00
    00000081 00                    1917 	.db 0x00
    00000082 00                    1918 	.db 0x00
    00000083 00                    1919 	.db 0x00
    00000084 00                    1920 	.db 0x00
    00000085 00                    1921 	.db 0x00
    00000086 00                    1922 	.db 0x00
    00000087 00                    1923 	.db 0x00
    00000088 00                    1924 	.db 0x00
    00000089 00                    1925 	.db 0x00
    0000008A 00                    1926 	.db 0x00
    0000008B 00                    1927 	.db 0x00
    0000008C 00                    1928 	.db 0x00
    0000008D 00                    1929 	.db 0x00
    0000008E 00                    1930 	.db 0x00
    0000008F 00                    1931 	.db 0x00
    00000090 00                    1932 	.db 0x00
    00000091 00                    1933 	.db 0x00
    00000092 00                    1934 	.db 0x00
    00000093 00                    1935 	.db 0x00
    00000094 00                    1936 	.db 0x00
    00000095 00                    1937 	.db 0x00
    00000096 00                    1938 	.db #0x00	; 0
    00000097 00                    1939 	.db 0x00
    00000098 00                    1940 	.db 0x00
    00000099 00                    1941 	.db 0x00
    0000009A 00                    1942 	.db 0x00
    0000009B 00                    1943 	.db 0x00
    0000009C 00                    1944 	.db 0x00
    0000009D 00                    1945 	.db 0x00
    0000009E 00                    1946 	.db 0x00
    0000009F 00                    1947 	.db 0x00
    000000A0 00                    1948 	.db 0x00
    000000A1 00                    1949 	.db 0x00
    000000A2 00                    1950 	.db 0x00
    000000A3 00                    1951 	.db 0x00
    000000A4 00                    1952 	.db 0x00
    000000A5 00                    1953 	.db 0x00
    000000A6 00                    1954 	.db 0x00
    000000A7 00                    1955 	.db 0x00
    000000A8 00                    1956 	.db 0x00
    000000A9 00                    1957 	.db 0x00
    000000AA 00                    1958 	.db 0x00
    000000AB 00                    1959 	.db 0x00
    000000AC 00                    1960 	.db 0x00
    000000AD 00                    1961 	.db 0x00
    000000AE 00                    1962 	.db 0x00
    000000AF 00                    1963 	.db 0x00
    000000B0 00                    1964 	.db 0x00
    000000B1 00                    1965 	.db 0x00
    000000B2 00                    1966 	.db 0x00
    000000B3 00                    1967 	.db 0x00
    000000B4 00                    1968 	.db 0x00
    000000B5 00                    1969 	.db 0x00
    000000B6 00                    1970 	.db 0x00
    000000B7 00                    1971 	.db 0x00
    000000B8 00                    1972 	.db 0x00
    000000B9 00                    1973 	.db 0x00
    000000BA 00                    1974 	.db 0x00
    000000BB 00                    1975 	.db 0x00
    000000BC 00                    1976 	.db 0x00
    000000BD 00                    1977 	.db 0x00
    000000BE 00                    1978 	.db 0x00
    000000BF 00                    1979 	.db 0x00
    000000C0 00                    1980 	.db 0x00
    000000C1 00                    1981 	.db 0x00
    000000C2 00                    1982 	.db 0x00
    000000C3 00                    1983 	.db 0x00
    000000C4 00                    1984 	.db 0x00
    000000C5 00                    1985 	.db 0x00
    000000C6 00                    1986 	.db 0x00
    000000C7 00                    1987 	.db 0x00
    000000C8 00                    1988 	.db #0x00	; 0
    000000C9 00                    1989 	.db 0x00
    000000CA 00                    1990 	.db 0x00
    000000CB 00                    1991 	.db 0x00
    000000CC 00                    1992 	.db 0x00
    000000CD 00                    1993 	.db 0x00
    000000CE 00                    1994 	.db 0x00
    000000CF 00                    1995 	.db 0x00
    000000D0 00                    1996 	.db 0x00
    000000D1 00                    1997 	.db 0x00
    000000D2 00                    1998 	.db 0x00
    000000D3 00                    1999 	.db 0x00
    000000D4 00                    2000 	.db 0x00
    000000D5 00                    2001 	.db 0x00
    000000D6 00                    2002 	.db 0x00
    000000D7 00                    2003 	.db 0x00
    000000D8 00                    2004 	.db 0x00
    000000D9 00                    2005 	.db 0x00
    000000DA 00                    2006 	.db 0x00
    000000DB 00                    2007 	.db 0x00
    000000DC 00                    2008 	.db 0x00
    000000DD 00                    2009 	.db 0x00
    000000DE 00                    2010 	.db 0x00
    000000DF 00                    2011 	.db 0x00
    000000E0 00                    2012 	.db 0x00
    000000E1 00                    2013 	.db 0x00
    000000E2 00                    2014 	.db 0x00
    000000E3 00                    2015 	.db 0x00
    000000E4 00                    2016 	.db 0x00
    000000E5 00                    2017 	.db 0x00
    000000E6 00                    2018 	.db 0x00
    000000E7 00                    2019 	.db 0x00
    000000E8 00                    2020 	.db 0x00
    000000E9 00                    2021 	.db 0x00
    000000EA 00                    2022 	.db 0x00
    000000EB 00                    2023 	.db 0x00
    000000EC 00                    2024 	.db 0x00
    000000ED 00                    2025 	.db 0x00
    000000EE 00                    2026 	.db 0x00
    000000EF 00                    2027 	.db 0x00
    000000F0 00                    2028 	.db 0x00
    000000F1 00                    2029 	.db 0x00
    000000F2 00                    2030 	.db 0x00
    000000F3 00                    2031 	.db 0x00
    000000F4 00                    2032 	.db 0x00
    000000F5 00                    2033 	.db 0x00
    000000F6 00                    2034 	.db 0x00
    000000F7 00                    2035 	.db 0x00
    000000F8 00                    2036 	.db 0x00
    000000F9 00                    2037 	.db 0x00
    000000FA 00                    2038 	.db #0x00	; 0
    000000FB 00                    2039 	.db 0x00
    000000FC 00                    2040 	.db 0x00
    000000FD 00                    2041 	.db 0x00
    000000FE 00                    2042 	.db 0x00
    000000FF 00                    2043 	.db 0x00
    00000100 00                    2044 	.db 0x00
    00000101 00                    2045 	.db 0x00
    00000102 00                    2046 	.db 0x00
    00000103 00                    2047 	.db 0x00
    00000104 00                    2048 	.db 0x00
    00000105 00                    2049 	.db 0x00
    00000106 00                    2050 	.db 0x00
    00000107 00                    2051 	.db 0x00
    00000108 00                    2052 	.db 0x00
    00000109 00                    2053 	.db 0x00
    0000010A 00                    2054 	.db 0x00
    0000010B 00                    2055 	.db 0x00
    0000010C 00                    2056 	.db 0x00
    0000010D 00                    2057 	.db 0x00
    0000010E 00                    2058 	.db 0x00
    0000010F 00                    2059 	.db 0x00
    00000110 00                    2060 	.db 0x00
    00000111 00                    2061 	.db 0x00
    00000112 00                    2062 	.db 0x00
    00000113 00                    2063 	.db 0x00
    00000114 00                    2064 	.db 0x00
    00000115 00                    2065 	.db 0x00
    00000116 00                    2066 	.db 0x00
    00000117 00                    2067 	.db 0x00
    00000118 00                    2068 	.db 0x00
    00000119 00                    2069 	.db 0x00
    0000011A 00                    2070 	.db 0x00
    0000011B 00                    2071 	.db 0x00
    0000011C 00                    2072 	.db 0x00
    0000011D 00                    2073 	.db 0x00
    0000011E 00                    2074 	.db 0x00
    0000011F 00                    2075 	.db 0x00
    00000120 00                    2076 	.db 0x00
    00000121 00                    2077 	.db 0x00
    00000122 00                    2078 	.db 0x00
    00000123 00                    2079 	.db 0x00
    00000124 00                    2080 	.db 0x00
    00000125 00                    2081 	.db 0x00
    00000126 00                    2082 	.db 0x00
    00000127 00                    2083 	.db 0x00
    00000128 00                    2084 	.db 0x00
    00000129 00                    2085 	.db 0x00
    0000012A 00                    2086 	.db 0x00
    0000012B 00                    2087 	.db 0x00
    0000012C 00                    2088 	.db #0x00	;  0
    0000012D 00                    2089 	.db #0x00	;  0
    0000012E 00                    2090 	.db 0x00
    0000012F 00                    2091 	.db 0x00
    00000130 00                    2092 	.db 0x00
    00000131 00                    2093 	.db 0x00
    00000132 00                    2094 	.db 0x00
    00000133 00                    2095 	.db 0x00
    00000134 00                    2096 	.db 0x00
    00000135 00                    2097 	.db 0x00
    00000136 00                    2098 	.db 0x00
    00000137 00                    2099 	.db 0x00
    00000138 00                    2100 	.db 0x00
    00000139 00                    2101 	.db 0x00
    0000013A 00                    2102 	.db 0x00
    0000013B 00                    2103 	.db 0x00
    0000013C 00                    2104 	.db 0x00
    0000013D 00                    2105 	.db 0x00
    0000013E 00                    2106 	.db 0x00
    0000013F 00                    2107 	.db 0x00
    00000140 00                    2108 	.db 0x00
    00000141 00                    2109 	.db 0x00
    00000142 00                    2110 	.db 0x00
    00000143 00                    2111 	.db 0x00
    00000144 00                    2112 	.db 0x00
    00000145 00                    2113 	.db 0x00
    00000146 00                    2114 	.db 0x00
    00000147 00                    2115 	.db 0x00
    00000148 00                    2116 	.db 0x00
    00000149 00                    2117 	.db 0x00
    0000014A 00                    2118 	.db 0x00
    0000014B 00                    2119 	.db 0x00
    0000014C 00                    2120 	.db 0x00
    0000014D 00                    2121 	.db 0x00
    0000014E 00                    2122 	.db 0x00
    0000014F 00                    2123 	.db 0x00
    00000150 00                    2124 	.db 0x00
    00000151 00                    2125 	.db 0x00
    00000152 00                    2126 	.db 0x00
    00000153 00                    2127 	.db 0x00
    00000154 00                    2128 	.db 0x00
    00000155 00                    2129 	.db 0x00
    00000156 00                    2130 	.db 0x00
    00000157 00                    2131 	.db 0x00
    00000158 00                    2132 	.db 0x00
    00000159 00                    2133 	.db 0x00
    0000015A 00                    2134 	.db 0x00
    0000015B 00                    2135 	.db 0x00
    0000015C 00                    2136 	.db 0x00
    0000015D 00                    2137 	.db 0x00
    0000015E 00                    2138 	.db 0x00
    0000015F 00                    2139 	.db 0x00
    00000160 00                    2140 	.db 0x00
    00000161 00                    2141 	.db 0x00
    00000162 00                    2142 	.db 0x00
    00000163 00                    2143 	.db 0x00
    00000164 00                    2144 	.db 0x00
    00000165 00                    2145 	.db 0x00
    00000166 00                    2146 	.db 0x00
    00000167 00                    2147 	.db 0x00
    00000168 00                    2148 	.db 0x00
    00000169 00                    2149 	.db 0x00
    0000016A 00                    2150 	.db 0x00
    0000016B 00                    2151 	.db 0x00
    0000016C 00                    2152 	.db 0x00
    0000016D 00                    2153 	.db 0x00
    0000016E 00                    2154 	.db 0x00
    0000016F 00                    2155 	.db 0x00
    00000170 00                    2156 	.db 0x00
    00000171 00                    2157 	.db 0x00
    00000172 00                    2158 	.db 0x00
    00000173 00                    2159 	.db 0x00
    00000174 00                    2160 	.db 0x00
    00000175 00                    2161 	.db 0x00
    00000176 00                    2162 	.db 0x00
    00000177 00                    2163 	.db 0x00
    00000178 00                    2164 	.db 0x00
    00000179 00                    2165 	.db 0x00
    0000017A 00                    2166 	.db 0x00
    0000017B 00                    2167 	.db 0x00
    0000017C 00                    2168 	.db 0x00
    0000017D 00                    2169 	.db 0x00
    0000017E 00                    2170 	.db 0x00
    0000017F 00                    2171 	.db 0x00
    00000180 00                    2172 	.db 0x00
    00000181 00                    2173 	.db 0x00
    00000182 00                    2174 	.db 0x00
    00000183 00                    2175 	.db 0x00
    00000184 00                    2176 	.db 0x00
    00000185 00                    2177 	.db 0x00
    00000186 00                    2178 	.db 0x00
    00000187 00                    2179 	.db 0x00
    00000188 00                    2180 	.db 0x00
    00000189 00                    2181 	.db 0x00
    0000018A 00                    2182 	.db 0x00
    0000018B 00                    2183 	.db 0x00
    0000018C 00                    2184 	.db 0x00
    0000018D 00                    2185 	.db 0x00
    0000018E 00                    2186 	.db 0x00
    0000018F 00                    2187 	.db 0x00
    00000190 00                    2188 	.db #0x00	; 0
    00000191 00                    2189 	.db 0x00
    00000192 00                    2190 	.db 0x00
    00000193 00                    2191 	.db 0x00
    00000194 00                    2192 	.db 0x00
    00000195 00                    2193 	.db 0x00
    00000196 00                    2194 	.db 0x00
    00000197 00                    2195 	.db 0x00
    00000198 00                    2196 	.db 0x00
    00000199 00                    2197 	.db 0x00
    0000019A 00                    2198 	.db 0x00
    0000019B 00                    2199 	.db 0x00
    0000019C 00                    2200 	.db 0x00
    0000019D 00                    2201 	.db 0x00
    0000019E 00                    2202 	.db 0x00
    0000019F 00                    2203 	.db 0x00
    000001A0 00                    2204 	.db 0x00
    000001A1 00                    2205 	.db 0x00
    000001A2 00                    2206 	.db 0x00
    000001A3 00                    2207 	.db 0x00
    000001A4 00                    2208 	.db 0x00
    000001A5 00                    2209 	.db 0x00
    000001A6 00                    2210 	.db 0x00
    000001A7 00                    2211 	.db 0x00
    000001A8 00                    2212 	.db 0x00
    000001A9 00                    2213 	.db 0x00
    000001AA 00                    2214 	.db 0x00
    000001AB 00                    2215 	.db 0x00
    000001AC 00                    2216 	.db 0x00
    000001AD 00                    2217 	.db 0x00
    000001AE 00                    2218 	.db 0x00
    000001AF 00                    2219 	.db 0x00
    000001B0 00                    2220 	.db 0x00
    000001B1 00                    2221 	.db 0x00
    000001B2 00                    2222 	.db 0x00
    000001B3 00                    2223 	.db 0x00
    000001B4 00                    2224 	.db 0x00
    000001B5 00                    2225 	.db 0x00
    000001B6 00                    2226 	.db 0x00
    000001B7 00                    2227 	.db 0x00
    000001B8 00                    2228 	.db 0x00
    000001B9 00                    2229 	.db 0x00
    000001BA 00                    2230 	.db 0x00
    000001BB 00                    2231 	.db 0x00
    000001BC 00                    2232 	.db 0x00
    000001BD 00                    2233 	.db 0x00
    000001BE 00                    2234 	.db 0x00
    000001BF 00                    2235 	.db 0x00
    000001C0 00                    2236 	.db 0x00
    000001C1 00                    2237 	.db 0x00
                                   2238 	.area _CABS (ABS)
